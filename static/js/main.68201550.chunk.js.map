{"version":3,"sources":["../node_modules/natural/lib/natural/sentiment sync","utils/withTracker.jsx","components/Header.jsx","components/Footer.jsx","pages/Home.jsx","utils/getDateTime.js","components/EventCard.jsx","components/EventCardGroup.jsx","components/FilterPopup.jsx","components/SelectDateRange.jsx","utils/isSubstring.js","components/SelectFilterOptions.jsx","api/utils.js","api/database.js","components/SelectSorting.jsx","api/eventApi.js","api/personApi.js","containers/EventsFilter.jsx","hooks/useDocumentTitle.js","hooks/useFilter.js","containers/AllEvents.jsx","containers/EventCardGroup.jsx","pages/Search.jsx","utils/hhmmss.js","components/EventTranscript.jsx","components/EventSearch.jsx","components/EventShareVideo.jsx","components/EventMinutes.jsx","components/VotingTable.jsx","components/EventTabs.jsx","hooks/useMatchMedia.js","components/Event.jsx","containers/Event.jsx","pages/Event.jsx","pages/AllEvents.jsx","components/PeopleCardGroup.jsx","containers/PeopleCardGroupContainer.jsx","pages/People.jsx","components/Person.jsx","containers/PersonContainer.jsx","pages/Person.jsx","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","withTracker","WrappedComponent","options","trackPage","page","ReactGA","set","pageview","window","location","hash","substr","nextProps","currentPage","this","props","pathname","nextPage","Component","Brand","styled","h1","HeadingTab","transition","borderRadius","padding","backgroundColor","color","Header","Fragment","Segment","vertical","Container","to","style","marginLeft","Footer","inverted","Grid","stackable","Row","columns","Column","as","content","List","link","Item","Layout","minHeight","ContentContainer","marginTop","marginBottom","SearchBar","Input","width","StyledGrid","display","HomePage","React","useState","searchQuery","setSearchQuery","verticalAlign","centered","placeholder","value","onChange","a","async","onKeyPress","event","key","history","push","search","trim","replace","state","query","Button","attached","primary","Link","getDateTime","date","moment","utc","format","StyledCard","Card","boxShadow","StyledCardContent","Content","EventCard","name","description","fluid","prettyQuery","getLinkParameters","Meta","Description","memo","events","Group","map","ButtonContainer","div","justifyContent","StyledPopup","Popup","minWidth","maxWidth","flexGrow","overflowY","PopupContainer","maxHeight","flexDirection","filter","header","handlePopupClose","mountNodeRef","children","clear","getTextRep","isActive","open","setOpen","handleClose","basic","flowing","mountNode","current","on","onClose","onOpen","pinned","offset","position","positionFixed","trigger","icon","labelPosition","Icon","size","onClick","getDateText","dateRange","defaultText","start","end","startString","endString","year","month","split","handleChange","Form","Field","type","isSubstring","string","substring","toLowerCase","indexOf","getCheckboxText","checkboxes","numberOfSelectedCheckbox","Object","values","length","OptionQueryInput","paddingRight","optionQuery","setOptionQuery","filterName","checked","filteredOptions","text","option","Checkbox","label","fetchJson","url","fetch","then","res","json","WHERE_OPERATORS","eq","contains","contains_any","in","gt","lt","gteq","lteq","ORDER_OPERATORS","asc","desc","WhereCondition","generalErr","Array","columnName","operator","includes","OrderCondition","by","s","String","db","credentials","firebase","initializeApp","connection","firestore","table","collection","doc","get","data","Promise","reject","queryResults","results","forEach","thisEvent","filters","orderBy","undefined","limit","ref","where","catch","err","_unpackQueryResults","apiKey","authDomain","projectId","databaseURL","getSortText","sort","order","textRep","sortByOptions","byOption","radio","storage","getAllEvents","selectRowsAsArray","allEvents","getBasicEvents","getEventMinutes","eventId","indexOrder","eventMinutes","getEventMinutesItem","eventMinutesItem","selectRowById","minutes_item_id","minutesItem","minutesItemFiles","minutes_item","file","getEventBody","bodyId","body","getEventTranscriptMetadata","firstTranscript","file_id","transcriptMetadata","gsReference","refFromURL","uri","getDownloadURL","transcript","getVotesForEvent","minutesItems","minuteItemsWithDecisions","minute","decision","formattedItems","item","matter","index","votePromises","all","minuteItemVotes","allPeople","i","votes","votesByPerson","vote","person","find","person_id","full_name","formattedIndividualVotes","sortBy","getEventById","body_id","minutes","videoUrl","video_uri","event_datetime","toMillis","toISOString","scPageUrl","source_uri","getEventsByIndexedTerm","term","bodyIDs","valueMin","natural","PorterStemmer","attach","stemmedTokens","tokenizeAndStem","stemmedToken","matches","summedMatchValueByEventId","mapValues","groupBy","flatten","match","event_id","eventTermMatches","reduce","sortedSummedMatches","sortEvents","filterEvents","getAllBodies","getFilteredEvents","promises","getFilteredEventsHelper","bodyID","startDate","Timestamp","fromMillis","valueOf","endDate","add","subtract","allBodies","isBefore","isAfter","sortOption","isSearch","getAllPeople","getVotesForPerson","personId","formattedVotes","eventMinutesItemsPromises","event_minutes_item_id","eventMinutesItems","minutesItemsPromises","eventsPromises","voteData","eventMinuteItem","minuteItem","formattedVote","voteForPerson","eventDate","body_name","sortedVotes","useRef","setAllBodies","committeeFilter","dateRangeFilter","sortFilter","committeeQuery","setCommitteeQuery","useEffect","didCancel","fetchAllBodies","useDocumentTitle","title","document","getSelectedOptions","k","useFilter","initialState","defaultData","textRepFunction","some","v","prevValue","newValue","dataValue","isSameValue","otherValue","hasOwnProperty","FiltersSection","top","zIndex","ResultCount","span","LoadingText","fontWeight","fontSize","Results","paddingLeft","EventCardGroupContainer","initialGetEventsComplete","setInitialGetEventsComplete","filterEventsComplete","setFilterEventsComplete","visibleEvents","setVisibleEvents","fetchAllEvents","prevCommitteeRef","prevDateRangeRef","prevSortRef","scroll","filterValues","committeeFilterValue","dateRangeFilterValue","sortFilterValue","useHistory","fetchEventsByIndexedTerm","prevSearchRef","onSubmit","preventDefault","widths","action","Search","q","queryString","parse","hhmmss","sec_num","parseInt","hours","Math","floor","seconds","TranscriptItem","flexWrap","alignItems","margin","TranscriptItemText","boxSizing","lineHeight","TimeStamp","searchText","handleSeek","windowScrollerRef","cache","CellMeasurerCache","fixedWidth","defaultHeight","handleUpdateScrollPosition","updatePosition","addEventListener","removeEventListener","onResize","clearAll","parent","columnIndex","rowIndex","start_time","searchWords","autoEscape","textToHighlight","height","deferredMeasurementCache","rowCount","rowHeight","rowRenderer","scrollToIndex","willChange","isScrolling","onChildScroll","scrollTop","disableHeight","autoHeight","onScroll","StyledEventSearch","Subheader","h2","SearchInput","SearchResultCount","TranscriptSearchHelpMessage","SearchResultsWrapper","border","flex","EventSearch","mediaQueriesMatches","transcriptSearchText","setTranscriptSearchText","transcriptItems","dispatchEvent","CustomEvent","TimePointInput","borderBottomColor","disabled","borderBottomStyle","borderBottomWidth","ShareVideoModal","Modal","right","ButtonWithRef","forwardRef","Ref","innerRef","ShareButton","ModalMountNode","toSeconds","timePointStr","nums","reverse","totalSeconds","num","isNaN","NaN","parseFloat","pow","toTimePointStr","initialTimePoint","isDisabled","timePointReducer","timePoint","payload","EventShareVideo","videoPlayerRef","shareLinkRef","timePointRef","useLocation","useReducer","dispatch","validateTimePointCb","closeIcon","compact","currentTime","player","getState","readyState","inputRef","onMount","select","execCommand","videoShareLink","href","getVideoShareLink","transparent","MinuteList","ol","listStylePosition","MinuteTitle","MinuteDescription","FileList","ul","listStyleType","EventMinutes","target","rel","Headers","accessor","MiniTable","Person","Decision","StyledTableHeader","Table","VotingTable","votingData","isPerson","striped","headerMetaData","HeaderCell","Body","votingDatum","Cell","record","singleLine","StyledEventTabs","StyledEventMenu","Menu","borderBottom","paddingTop","topOffset","activeItem","setActiveItem","contextRef","getBoundingClientRect","scrollIntoView","scrollBy","handleItemClick","Sticky","context","styleElement","secondary","pointing","active","details","useMatchMedia","mediaQuery","matchMedia","setMatches","mediaQueryList","addListener","removeListener","StyledEvent","EventDate","InfoSegment","Inline","FixedSentinel","left","visibility","DummyContainer","isFixed","DummyDiv","PlayerContainer","PlayerWrapper","Event","videoTimePoint","setIsFixed","videoOffSetHeight","setVideoOffsetHeight","video","disablePictureInPicture","offsetHeight","seek","paused","hasStarted","play","Visibility","once","onBottomPassed","onBottomPassedReverse","aspectRatio","preload","src","startTime","autoHide","rates","EventContainer","setEvent","eventData","Loader","EventPage","t","params","parseQuery","max","AllEventsPage","AllEvents","FlexWrapContainer","marginRight","cursor","transform","CardHeading","withRouter","people","email","PeopleCardGroupContainer","updatePeople","fetchData","People","cssCheckbox","personHistory","phone","website","votingOptions","_","uniq","selectedVoteFilters","setSelectedVoteFilters","filteredVotes","setFilteredVotes","onSelectedVoteFilterChange","selectedFilters","without","isEmpty","filterVotingOptions","votingOption","updatePersonHistory","initialize","App","basename","exact","path","component","Home","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.68201550.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 357;","import React, { Component } from \"react\";\nimport ReactGA from \"react-ga\";\n\nexport default function withTracker(WrappedComponent, options = {}) {\n  const trackPage = (page) => {\n    ReactGA.set({\n      page,\n      ...options\n    });\n    ReactGA.pageview(page);\n  };\n\n  const HOC = class extends Component {\n    componentDidMount() {\n      trackPage(window.location.hash.substr(1));\n    }\n\n    componentDidUpdate(nextProps) {\n      const currentPage = this.props.location.pathname;\n      const nextPage = nextProps.location.pathname;\n\n      if (currentPage !== nextPage) {\n        trackPage(nextPage);\n      }\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  };\n\n  return HOC;\n}\n","import React from \"react\";\nimport { Segment, Container } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"@emotion/styled\";\n\nconst Brand = styled.h1({});\n\nconst HeadingTab = styled(\"span\")({\n  transition: \".8s all\",\n  borderRadius: \"5px\",\n  padding: \"1rem .5rem\",\n  \":hover\": {\n    backgroundColor: \"#F5F5F5\",\n    color: \"black\"\n\n  }\n});\n\nconst Header = () => (\n  <React.Fragment>\n    <Segment vertical>\n      <Container>\n        <Link to=\"/\">\n          <Brand>Council Data Project</Brand>\n        </Link>\n      </Container>\n    </Segment>\n    <Segment vertical>\n      <Container>\n        <Link to=\"/events\">\n          <HeadingTab>Events</HeadingTab>\n        </Link>\n        <Link to=\"/people\">\n          <HeadingTab style={{ marginLeft: \"10px\" }}>People</HeadingTab>\n        </Link>\n      </Container>\n    </Segment>\n  </React.Fragment>\n);\n\nexport default Header;\n","import React from \"react\";\nimport { Container, Segment, Grid, Header, List } from \"semantic-ui-react\";\n\nconst Footer = () => (\n  <Segment inverted vertical style={{ padding: \"5em 0em\" }}>\n    <Container>\n      <Grid inverted stackable>\n        <Grid.Row columns=\"equal\">\n          <Grid.Column>\n            <Header inverted as=\"h4\" content=\"About\" />\n            <List link inverted>\n              <List.Item as=\"a\">The Project</List.Item>\n              <List.Item as=\"a\">The Team</List.Item>\n              <List.Item as=\"a\">Other Work</List.Item>\n            </List>\n          </Grid.Column>\n          <Grid.Column>\n            <Header inverted as=\"h4\" content=\"Seattle\" />\n            <List link inverted>\n              <List.Item as=\"a\">City of Seattle</List.Item>\n              <List.Item as=\"a\">Seattle Open Data</List.Item>\n              <List.Item as=\"a\">Seattle Channel</List.Item>\n            </List>\n          </Grid.Column>\n          <Grid.Column>\n            <Header inverted as=\"h4\" content=\"Developers\" />\n            <List link inverted>\n              <List.Item as=\"a\">Council Data Project</List.Item>\n              <List.Item as=\"a\">Seattle Specific</List.Item>\n              <List.Item as=\"a\">Transcription Runner</List.Item>\n            </List>\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <p>\n            This web application is not funded by, nor associated with the\n            Seattle City Council. This is a prototype web application to show\n            the viability of an automated and collaborativly sourced city\n            council transcription service. The transcripts are roughly\n            ninty-percent accurate, and therefore may not represent what was\n            actually said.\n          </p>\n        </Grid.Row>\n      </Grid>\n    </Container>\n  </Segment>\n);\n\nexport default Footer;\n","import React from \"react\";\nimport { Container, Input, Button, Grid } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"@emotion/styled\";\n\nconst Layout = styled(Container)({\n  minHeight: \"100vh\"\n});\n\nconst ContentContainer = styled(Container)({\n  marginTop: \"2em !important\",\n  marginBottom: \"5em !important\"\n});\n\nconst SearchBar = styled(Input)({\n  width: \"50% !important\"\n});\n\nconst StyledGrid = styled(Grid)({\n  display: \"block\",\n  marginTop: \"150px !important\"\n});\n\nconst HomePage = props => {\n  const [searchQuery, setSearchQuery] = React.useState(\"\");\n\n  const handleKeyPress = event => {\n    if (event.key === \"Enter\") {\n      props.history.push({\n        pathname: '/search',\n        search: `?q=${searchQuery.trim().replace(/\\s+/g, '+')}`,\n        state: { query: searchQuery }\n      });\n    }\n  };\n  const handleSearch = async (e, { value }) => {\n    setSearchQuery(value);\n  };\n\n  return (\n    <Layout>\n      <ContentContainer>\n        <StyledGrid verticalAlign=\"middle\" centered>\n          <Grid.Row>\n            <h1>Search City Council Transcripts</h1>\n          </Grid.Row>\n          <Grid.Row>\n            <SearchBar\n              placeholder=\"Enter a keyword to search meeting transcripts\"\n              value={searchQuery}\n              onChange={handleSearch}\n              onKeyPress={handleKeyPress}\n            />\n            <Button\n              attached=\"right\"\n              primary\n              as={Link}\n              to={{\n                pathname: '/search',\n                search: `?q=${searchQuery.trim().replace(/\\s+/g, '+')}`,\n                state: { query: searchQuery }\n              }}\n            >\n              Search\n            </Button>\n          </Grid.Row>\n        </StyledGrid>\n      </ContentContainer>\n    </Layout>\n  );\n};\n\nexport default HomePage;\n","import moment from 'moment';\n\n/*Always display PST/PDT for event_datetime, regardless of user's locale*/\nconst getDateTime = (date) => {\n  return moment.utc(date).format('MMMM D, YYYY h:mm A');\n};\n\nexport default getDateTime;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card } from \"semantic-ui-react\";\nimport styled from \"@emotion/styled\";\nimport getDateTime from \"../utils/getDateTime\";\n\nconst StyledCard = styled(Card)({\n  boxShadow: \"none !important\"\n});\n\nconst StyledCardContent = styled(Card.Content)({\n  padding: \"0 !important\"\n});\n\nconst EventCard = ({ name, date, description, link, query }) => {\n  const getLinkParameters = () => {\n    // Shorten whitespaces to one whitespace\n    const prettyQuery = query ? query.trim().replace(/\\s+/g, ' ') : ''\n    const linkParameters = {\n      // For search parameter, replace whitespaces with `+`\n      pathname: link,\n      search: prettyQuery ? `?q=${prettyQuery.replace(/\\s+/g, '+')}` : '',\n      state: {\n        query: prettyQuery\n      }\n    }\n    return linkParameters;\n  }\n\n  return (\n    <StyledCard fluid>\n      <StyledCardContent>\n        <Card.Header>\n          <Link to={getLinkParameters()}>\n            {name}\n          </Link>\n        </Card.Header>\n        <Card.Meta>{getDateTime(date)}</Card.Meta>\n        <Card.Description>{description}</Card.Description>\n      </StyledCardContent>\n    </StyledCard >\n  )\n};\n\nexport default EventCard;\n","import React from \"react\";\nimport EventCard from \"./EventCard\";\nimport { Card } from \"semantic-ui-react\";\n\nconst EventCardGroup = ({ events, query }) => {\n  return (\n    <Card.Group centered>\n      {events.map(({ name, date, description, id }) => (\n        <EventCard\n          key={id}\n          name={name}\n          date={date}\n          description={description}\n          link={`/events/${id}`}\n          query={query}\n        />\n      ))}\n    </Card.Group>\n  );\n};\n\nexport default React.memo(EventCardGroup);","import React from 'react';\nimport { Button, Header, Icon, Popup } from 'semantic-ui-react';\nimport styled from '@emotion/styled';\n\nconst ButtonContainer = styled.div({\n  display: 'flex',\n  justifyContent: 'space-between',\n  padding: '1em 0'\n});\n\nconst StyledPopup = styled(Popup)({\n  minWidth: '250px !important',\n  maxWidth: '90% !important',\n  boxShadow: 'none !important',\n  '@media(max-width:500px)': {\n    width: '86% !important'\n  }\n});\n\nconst ContentContainer = styled(Popup.Content)({\n  flexGrow: '1',\n  overflowY: 'auto !important',\n});\n\nconst PopupContainer = styled.div({\n  maxHeight: '45vh',\n  display: 'flex',\n  flexDirection: 'column'\n});\n\nconst FilterPopup = ({\n  filter,\n  header,\n  handlePopupClose,\n  mountNodeRef,\n  children\n}) => {\n  const { clear, getTextRep, isActive } = filter;\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    handlePopupClose();\n  };\n\n  const handleClear = () => {\n    clear();\n  };\n\n  return (\n    <StyledPopup\n      basic\n      flowing\n      mountNode={mountNodeRef.current}\n      on='click'\n      onClose={handleClose}\n      onOpen={handleOpen}\n      open={open}\n      pinned={true}\n      offset='0, -5px'\n      position='bottom left'\n      positionFixed={true}\n      trigger={\n        <Button\n          icon\n          labelPosition='right'\n          basic={!isActive()}>\n          <Icon name='angle down' />\n          {getTextRep()}\n        </Button>}\n    >\n    <PopupContainer>\n      <Header content={header} />\n      <ContentContainer>\n        {children}\n      </ContentContainer>\n      <ButtonContainer >\n        <Button size='mini' onClick={handleClear}>\n          <Icon name='remove' /> Clear\n        </Button>\n        <Button size='mini' primary onClick={handleClose}>\n          <Icon name='checkmark' /> Save\n        </Button>\n      </ButtonContainer>\n    </PopupContainer>\n    </StyledPopup>\n  );\n};\n\nexport default React.memo(FilterPopup);","import React from 'react';\nimport { Form } from 'semantic-ui-react';\nimport moment from 'moment';\n\n/**\n * Generate the text representation of a date range.\n * @param {Object} dateRange The start and end dates object.\n * @param {string} dateRange.start\n * @param {string} dateRange.end\n * @param {string} defaultText The default text representation, when no dates have been entered.\n * @return {string} The text representation.\n */\nexport const getDateText = (dateRange, defaultText) => {\n  const start = moment.utc(dateRange.start, 'YYYY-MM-DD');\n  const end = moment.utc(dateRange.end, 'YYYY-MM-DD');\n  const startString = start.format('MMM D, YYYY');\n  const endString = end.format('MMM D, YYYY');\n  let textRep;\n  if (dateRange.start && dateRange.end) {\n    if (start.year() === end.year() && start.month() === end.month()) {\n      textRep = `${startString.split(',')[0]} - ${end.date()}, ${end.year()}`;\n    } else if (start.year() === end.year()) {\n      textRep = `${startString.split(',')[0]} - ${endString.split(',')[0]}, ${end.year()}`;\n    } else {\n      textRep = `${startString} - ${endString}`;\n    }\n  } else if (dateRange.start) {\n    textRep = `${startString} -`;\n  } else if (dateRange.end) {\n    textRep = `- ${endString}`;\n  } else {\n    textRep = defaultText;\n  }\n  return textRep;\n};\n\nconst SelectDateRange = ({\n  filter\n}) => {\n  const { value, handleChange } = filter;\n\n  const onChange = (e, { name, value }) => {\n    handleChange(name, value);\n  };\n\n  return (\n    <Form>\n      <Form.Field>From</Form.Field>\n      <Form.Input fluid name='start' type='date' onChange={onChange} value={value.start} />\n      <Form.Field>To</Form.Field>\n      <Form.Input fluid name='end' type='date' onChange={onChange} value={value.end} />\n    </Form>\n  );\n};\n\nexport default React.memo(SelectDateRange);","const isSubstring = (string = \"\", substring = \"\") =>\n  string.toLowerCase().indexOf(substring.toLowerCase()) !== -1;\n\nexport default isSubstring;\n","import React from 'react';\nimport { Form } from 'semantic-ui-react';\nimport styled from '@emotion/styled';\nimport isSubstring from '../utils/isSubstring'\n\n/**\n * Generate the text representation of a list of checkboxes, by appending the number of selected checkboxes\n * to the defaultText.\n * @param {Object} checkboxes The object representation of the list of checkboxes, \n * where the keys are the different options, and each value is a boolean(whether the option is selected).\n * @param {string} defaultText The default text representation, when no checkboxes are selected.\n * @returns {string} The text representation.\n */\nexport const getCheckboxText = (checkboxes, defaultText) => {\n  const numberOfSelectedCheckbox = Object.values(checkboxes).filter(value => value).length;\n  const textRep = numberOfSelectedCheckbox ? `${defaultText} : ${numberOfSelectedCheckbox}` : defaultText;\n  return textRep;\n};\n\nconst OptionQueryInput = styled(Form.Input)({\n  paddingRight: '.8em'\n});\n\nconst SelectFilterOptions = ({\n  filter,\n  options,\n  optionQuery,\n  setOptionQuery,\n}) => {\n  const { filterName, value, handleChange } = filter;\n\n  const onChange = (e, { name, checked }) => {\n    handleChange(name, checked);\n  };\n\n  const onOptionQueryChange = (e, { value }) => {\n    setOptionQuery(value);\n  };\n\n  let filteredOptions = options;\n  if (options.length > 5) {\n    filteredOptions = options.filter(({ text }) => isSubstring(text, optionQuery));\n  }\n\n  return (\n    <Form>\n      {options.length > 5 && <OptionQueryInput\n        placeholder={`Search ${filterName} Options`}\n        value={optionQuery}\n        onChange={onOptionQueryChange} />}\n      {filteredOptions.map(option =>\n        <Form.Checkbox\n          key={option.name}\n          label={option.text}\n          name={option.name}\n          checked={value[option.name]}\n          onChange={onChange}\n        />)}\n    </Form>\n  );\n};\n\nexport default React.memo(SelectFilterOptions);","export async function fetchJson(url){\n    return fetch(url)\n        .then(res => res.json())\n};\n\nexport function isString(s) {\n    return typeof(s) === \"string\" || s instanceof String;\n};\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport { isString } from \"./utils\";\n\nexport const WHERE_OPERATORS = {\n    eq: \"==\",\n    contains: \"array-contains\",\n    contains_any: \"array-contains-any\",\n    in: \"in\",\n    gt: \">\",\n    lt: \"<\",\n    gteq: \">=\",\n    lteq: \"<=\",\n};\n\nexport const ORDER_OPERATORS = {\n    asc: \"asc\",\n    desc: \"desc\"\n};\n\nexport class WhereCondition {\n    /**\n    * @param {(Object|Array)} filter The object or array to use to create a WhereCondition from.\n    *   When provided an Array, the array should be ordered like so [`columnName`, optional: `operator`, `value`].\n    *   When provided an Object, the object must have `columnName` and `value` attributes, and, optional `operator`\n    *   attributes. The `operator` is optional in both cases and if left out, will default to value equality.\n    */\n    constructor(filter) {\n        const generalErr = new Error(`Unsure how to create WhereCondition from received data: ${filter}`);\n\n        // Handle array and object\n        if (filter instanceof Array) {\n            // Array two items long, assume equal operator\n            if (filter.length === 2) {\n                this.columnName = filter[0];\n                this.operator = WHERE_OPERATORS.eq;\n                this.value = filter[1];\n            // Array of three items long, check order\n            } else if (filter.length === 3) {\n                // Check proper order by ensuring an approved operator is included at index one\n                if (Object.values(WHERE_OPERATORS).includes(filter[1])) {\n                    // Unpack contents\n                    this.columnName = filter[0];\n                    this.operator = filter[1];\n                    this.value = filter[2];\n                } else {\n                    throw new Error(`\n                        Unknown WhereCondition operator: ${filter[1]}\n                        Allowed WhereCondition operators: ${Object.values(WHERE_OPERATORS)}\n                    `);\n                };\n            // Log error in any other case\n            } else {\n                throw generalErr;\n            };\n        } else if (filter instanceof Object) {\n            // All attributes present and operator is valid\n            if (\n                filter.columnName &&\n                filter.operator &&\n                filter.value\n            ) {\n                if (Object.values(WHERE_OPERATORS).includes(filter.operator)) {\n                    this.columnName = filter.columnName;\n                    this.operator = filter.operator;\n                    this.value = filter.value;\n                } else {\n                    throw new Error(`\n                        Unknown WhereCondition operator: ${filter.operator}\n                        Allowed WhereCondition operators: ${Object.values(WHERE_OPERATORS)}\n                    `);\n                };\n            // Only column name and value attributes present, assume equal operator\n            } else if (filter.columnName && filter.value) {\n                this.columnName = filter.columnName;\n                this.operator = WHERE_OPERATORS.eq;\n                this.value = filter.value;\n            } else {\n                throw generalErr;\n            };\n        } else {\n            throw generalErr;\n        };\n    };\n};\n\nexport class OrderCondition {\n    /**\n    * @param {(Object|Array|string)} order The object, array, or string to use to create an OrderCondition from.\n    *   When provided an Array, the array should be ordered like so [`columnName`, optional: `operator`].\n    *   When provided an Object, the object must have `columnName`, and, optional `operator` attributes.\n    *   The `operator` is optional in both cases and if left out, will default to `descending`.\n    *   When provided a String, the string is simply the `columnName` for the OrderCondition, as the `operator` will\n    *   default to `descending`.\n    */\n    constructor(by) {\n        const generalErr = new Error(`Unsure how to create OrderCondition from received data: ${by}`);\n\n        // Handle string, array, and object\n        if (isString(by)) {\n            this.columnName = by;\n            this.operator = ORDER_OPERATORS.desc;\n        } else if (by instanceof Array) {\n            // Array single item long, assume descending operator\n            if (by.length === 1) {\n                this.columnName = by[0];\n                this.operator = ORDER_OPERATORS.desc;\n            // Array of two items long, check order\n            } else if (by.length === 2) {\n                // Check proper order by ensuring an approved operator is included at index one\n                if (Object.values(ORDER_OPERATORS).includes(by[1])) {\n                    // Unpack contents\n                    this.columnName = by[0];\n                    this.operator = by[1];\n                } else {\n                    throw new Error(`\n                        Unknown OrderCondition operator: ${by[1]}\n                        Allowed OrderCondition operators: ${Object.values(ORDER_OPERATORS)}\n                    `);\n                };\n            // Log error in any other case\n            } else {\n                throw generalErr;\n            };\n        } else if (by instanceof Object) {\n            // All attributes present and operator is valid\n            if (\n                by.columnName &&\n                by.operator\n            ) {\n                if (Object.values(ORDER_OPERATORS).includes(by.operator)) {\n                    this.columnName = by.columnName;\n                    this.operator = by.operator;\n                } else {\n                    throw new Error(`\n                        Unknown OrderCondition operator: ${by.operator}\n                        Allowed OrderCondition operators: ${Object.values(ORDER_OPERATORS)}\n                    `);\n                };\n            // Only column name, assume descending operator\n            } else if (by.columnName) {\n                this.columnName = by.columnName;\n                this.operator = ORDER_OPERATORS.desc;\n            } else {\n                throw generalErr;\n            };\n        } else {\n            throw generalErr;\n        };\n    };\n};\n\nclass Database {\n    /**\n    * @param {Object} credentials An object that contains all reqired information to interact with a CDP database.\n    */\n    constructor(credentials) {\n        // Store for save keeping\n        this.credentials = credentials;\n\n        // Initialize Connection\n        firebase.initializeApp(this.credentials);\n\n        // Store connection\n        this.connection = firebase.firestore();\n    };\n\n    /**\n    * @param {string} table The name of the table (collection) you want to request results from.\n    * @param {string} id The id for the row you want to retrieve.\n    * @return {Object} If the row was found, the row's contents are returned as an object.\n    */\n    async selectRowById(table, id) {\n        try {\n            const res = await this.connection\n                .collection(table)\n                .doc(id)\n                .get()\n                \n            return res.data();\n        } catch (e) {\n            return Promise.reject(e);\n        };\n    };\n\n    /**\n    * @param {Object[]} queryResults The results returned from a query to the database.\n    * @return {Object[]} The formatted query results.\n    */\n    async _unpackQueryResults(queryResults) {\n        const results = [];\n        queryResults.forEach(doc => {\n            const data = doc.data();\n            const thisEvent = {\n              id: doc.id,\n              ...data\n            };\n            results.push(thisEvent);\n        });\n        return results;\n    };\n\n    /**\n    * @param {string} table The name of the table (collection) you want to request results from.\n    * @param {(Object[]|Array[])} [filters] A list of filters (where conditions) to add.\n    * @param {(Object|string)} [orderBy] An order by condition to order the results by prior to returning.\n    * @param {integer} [limit=1000] An integer limit to how many rows should be returned that match the query provided.\n    * @return {Object[]} The formatted query results.\n    */\n    async selectRowsAsArray(table, filters = [], orderBy = undefined, limit = 1000) {\n        try {\n            // Make basic reference\n            let ref = this.connection.collection(table);\n\n            // Attach filters\n            filters.forEach(filter => {\n                ref = ref.where(filter.columnName, filter.operator, filter.value);\n            });\n\n            // Attach order by\n            if (orderBy) {\n                ref = ref.orderBy(orderBy.columnName, orderBy.operator);\n            };\n\n            // Attach limit\n            ref = ref.limit(limit);\n\n            // Make requst\n            const res = await ref.get()\n                .catch(err => {\n                    throw new Error(`Failed to retrieve data from database. Error: ${err}`);\n                });\n\n            // Return the formatted results\n            return await this._unpackQueryResults(res);\n        } catch (e) {\n            return Promise.reject(e);\n        };\n    };\n};\n\n// Export created and connected database\nexport const db = new Database({\n    apiKey: \"AIzaSyA7aO6weBcOUBZLmxE3aMyn4NeElVEHZUc\",\n    authDomain: \"cdp-sea.firebaseapp.com\",\n    projectId: \"cdp-seattle\",\n    databaseURL: \"https://cdp-sea.firebaseio.com\"\n});\n","import React from 'react';\nimport { Form } from 'semantic-ui-react';\nimport { ORDER_OPERATORS } from '../api/database';\n\n/**\n * Generate the text representation of a sort object.\n * @param {Object} sort The sort by and sort order options.\n * @param {string} sort.by\n * @param {string} sort.order\n * @param {string} defaultText The default text representation, \n * when no sort options are selected.\n * @return {string} The text representation.\n */\nexport const getSortText = (sort, defaultText) => {\n  let by;\n  let order;\n  if (sort.by) {\n    switch (sort.by) {\n      case 'name':\n        by = 'Committee';\n        break;\n      case 'date':\n        by = 'Date';\n        break;\n      case 'value':\n        by = 'Relevance';\n        break;\n      default:\n        break;\n    }\n  }\n  if (sort.order) {\n    order = sort.order === ORDER_OPERATORS.asc ? 'Ascending' : 'Descending';\n  }\n  let textRep = defaultText;\n  if (by && order) {\n    textRep += ` by ${by}: ${order}`;\n  } else if (by) {\n    textRep += ` by ${by}`;\n  } else if (order) {\n    textRep += ` ${order}`;\n  } else {\n    textRep += ' By';\n  }\n  return textRep;\n};\n\nconst SelectSorting = ({\n  filter,\n  sortByOptions\n}) => {\n  const { value, handleChange } = filter;\n\n  const onChange = (e, { name, value }) => {\n    handleChange(name, value);\n  };\n\n  return (\n    <Form>\n      <Form.Field>Sort By</Form.Field>\n      {sortByOptions.map(byOption =>\n        <Form.Checkbox\n          key={byOption.value}\n          radio\n          label={byOption.label}\n          name='by'\n          value={byOption.value}\n          checked={value.by === byOption.value}\n          onChange={onChange}\n        />)}\n      <Form.Field>Sort Order</Form.Field>\n      <Form.Checkbox\n        radio\n        label='Ascending'\n        name='order'\n        value={ORDER_OPERATORS.asc}\n        checked={value.order === ORDER_OPERATORS.asc}\n        onChange={onChange}\n      />\n      <Form.Checkbox\n        radio\n        label='Descending'\n        name='order'\n        value={ORDER_OPERATORS.desc}\n        checked={value.order === ORDER_OPERATORS.desc}\n        onChange={onChange}\n      />\n    </Form>\n  );\n};\n\nexport default React.memo(SelectSorting);","import firebase from \"firebase/app\";\nimport \"firebase/storage\";\nimport moment from \"moment\";\nimport natural from \"natural\";\nimport { flatten, orderBy, sortBy, groupBy, mapValues, filter } from \"lodash\";\nimport { db, WhereCondition, WHERE_OPERATORS, OrderCondition, ORDER_OPERATORS } from \"./database\";\nimport { fetchJson } from \"./utils\";\n\nconst storage = firebase.storage();\n\nexport async function getAllEvents() {\n  try {\n    const allEvents = await db.selectRowsAsArray(\n      \"event\",\n      [],\n      new OrderCondition([\"event_datetime\", ORDER_OPERATORS.desc])\n    );\n    return await getBasicEvents(allEvents);\n  } catch (e) {\n    return Promise.reject(e);\n  }\n}\n\nexport async function getEventMinutes(eventId, indexOrder) {\n  try {\n    const eventMinutes = await db.selectRowsAsArray(\n      \"event_minutes_item\",\n      [new WhereCondition([\"event_id\", WHERE_OPERATORS.eq, eventId])],\n      new OrderCondition([\"index\", indexOrder])\n    );\n    return eventMinutes;\n  } catch (e) {\n    return Promise.reject(e);\n  };\n}\n\nexport async function getEventMinutesItem(eventMinutesItem) {\n  try {\n    const minutesItem = await db.selectRowById(\"minutes_item\", eventMinutesItem.minutes_item_id);\n    const minutesItemFiles = await db.selectRowsAsArray(\n      \"minutes_item_file\",\n      [new WhereCondition([\"minutes_item_id\", WHERE_OPERATORS.eq, eventMinutesItem.minutes_item_id])],\n      new OrderCondition(['name', ORDER_OPERATORS.asc])\n    );\n\n    return {\n      ...eventMinutesItem,\n      minutes_item: {\n        id: eventMinutesItem.minutes_item_id,\n        ...minutesItem,\n        file: minutesItemFiles\n      }\n    };\n  } catch (e) {\n    return Promise.reject(e);\n  };\n}\n\nexport async function getEventBody(bodyId) {\n  try {\n    const body = await db.selectRowById('body', bodyId);\n    return body;\n  } catch (e) {\n    return Promise.reject(e);\n  }\n}\n\nexport async function getEventTranscriptMetadata(eventId) {\n  try {\n    const [firstTranscript] = await db.selectRowsAsArray(\n      \"transcript\",\n      [new WhereCondition([\"event_id\", WHERE_OPERATORS.eq, eventId])]\n    );\n\n    const transcriptMetadata = await db.selectRowById(\"file\", firstTranscript.file_id);\n\n    // https://firebase.google.com/docs/storage/web/download-files\n    const gsReference = storage.refFromURL(transcriptMetadata.uri);\n    const transcript = await gsReference\n      .getDownloadURL()\n      .then(url => fetchJson(url));\n    return transcript;\n  } catch (e) {\n    return Promise.reject(e);\n  }\n}\n\nexport async function getVotesForEvent(minutesItems) {\n  const minuteItemsWithDecisions = minutesItems.filter(\n    minute => minute.decision !== null\n  );\n\n  const formattedItems = [];\n  minuteItemsWithDecisions.forEach(item => {\n    formattedItems.push({\n      matter: item.minutes_item.matter,\n      name: item.minutes_item.name,\n      id: item.id,\n      decision: item.decision,\n      index: item.index\n    });\n  });\n\n  const votePromises = formattedItems.map(item =>\n    db.selectRowsAsArray(\n      \"vote\",\n      [new WhereCondition([\"event_minutes_item_id\", WHERE_OPERATORS.eq, item.id])]\n    )\n  );\n\n  const minuteItemVotes = await Promise.all(votePromises);\n\n  const allPeople = await db.selectRowsAsArray(\"person\");\n\n  formattedItems.forEach((item, i) => {\n    const votes = minuteItemVotes[i];\n    const votesByPerson = [];\n    votes.forEach(vote => {\n      const person = allPeople.find(person => person.id === vote.person_id)\n      votesByPerson.push({\n        decision: vote.decision,\n        person_id: vote.person_id,\n        full_name: person.full_name\n      });\n    });\n\n    item.formattedIndividualVotes = sortBy(votesByPerson, vote => vote.full_name);\n  });\n\n  return formattedItems;\n}\n\nexport async function getEventById(id) {\n  try {\n    const event = await db.selectRowById(\"event\", id);\n    const body = await getEventBody(event.body_id);\n    const minutes = await getEventMinutes(id, ORDER_OPERATORS.asc);\n    const minutesItems = await Promise.all(\n      minutes.map(minute => getEventMinutesItem(minute))\n    );\n    const transcript = await getEventTranscriptMetadata(id);\n    const votes = await getVotesForEvent(minutesItems);\n\n    return {\n      id,\n      name: body.name,\n      description: body.description,\n      videoUrl: event.video_uri,\n      date: moment\n        .utc(event.event_datetime.toMillis())\n        .toISOString(),\n      minutes: minutesItems,\n      transcript: transcript.data,\n      scPageUrl: event.source_uri,\n      votes: votes\n    };\n  } catch (e) {\n    return Promise.reject(e);\n  }\n}\n/**\n* @param {string} term The search term\n* @param {Object} dateRange The start and end dates to filter search results.\n* @param {string} dateRange.start\n* @param {string} dateRange.end \n* @param {string[]} bodyIDs The list of committee/body ids to filter search results.\n* @param {Object} sort The sort by and sort order options.\n* @param {string} sort.by\n* @param {string} sort.order \n* @return {Object[]} The search results, where each event's date is within\n* the date range and the event's body id is in bodyIDs(if it's non-empty). The search\n* results are sorted according to the sort options.\n*/\nexport async function getEventsByIndexedTerm(term, dateRange = {}, bodyIDs = [], sort = {}) {\n  const valueMin = 0;\n  try {\n    natural.PorterStemmer.attach();\n\n    const stemmedTokens = term.tokenizeAndStem();\n    if (stemmedTokens.length === 0) {\n      return [];\n    }\n\n    // get matches for each term\n    const matches = await Promise.all(\n      stemmedTokens.map(stemmedToken =>\n        db.selectRowsAsArray(\n          \"indexed_event_term\",\n          [new WhereCondition([\"term\", WHERE_OPERATORS.eq, stemmedToken])]\n        )\n      )\n    );\n\n    // create a map of event id to object with id and sum of match values\n    const summedMatchValueByEventId = mapValues(\n      groupBy(flatten(matches), match => match.event_id),\n      (eventTermMatches, key) =>\n        eventTermMatches.reduce(\n          (current, item) => ({\n            ...current,\n            value: current.value + item.value\n          }),\n          { event_id: key, value: 0 }\n        )\n    );\n\n    // get only event id with summed values > valueMin\n    const sortedSummedMatches = filter(summedMatchValueByEventId, ({ value }) => value > valueMin);\n    let events = await Promise.all(\n      sortedSummedMatches.map(({ event_id }) => db.selectRowById('event', event_id))\n    );\n\n    events = await getBasicEvents(events);\n\n    events.forEach((event, i) => {\n      event.id = sortedSummedMatches[i].event_id;\n      event.value = sortedSummedMatches[i].value;\n    });\n\n    events = filterEvents(events, dateRange, bodyIDs);\n    events = sortEvents(events, sort, true);\n    return events;\n  } catch (e) {\n    return Promise.reject(e);\n  }\n}\n\nexport async function getAllBodies() {\n  try {\n    return db.selectRowsAsArray(\n      'body',\n      [],\n      new OrderCondition(['name', ORDER_OPERATORS.asc])\n    );\n  } catch (e) {\n    return Promise.reject(e);\n  }\n}\n\n/**\n* @param {Object} dateRange The start and end dates to filter events.\n* @param {string} dateRange.start\n* @param {string} dateRange.end \n* @param {string[]} bodyIDs The list of committee/body ids to filter events.\n* @param {Object} sort The sort by and sort order options.\n* @param {string} sort.by\n* @param {string} sort.order \n* @return {Object[]} A list of events, where each event's date is within\n* the date range and the event's body id is in bodyIDs(if it's non-empty). The events\n* are sorted according to the sort options.\n*/\nexport async function getFilteredEvents(dateRange, bodyIDs, sort) {\n  try {\n    const promises = [];\n    if (bodyIDs.length) {\n      bodyIDs.forEach(id => promises.push(getFilteredEventsHelper(dateRange, id)));\n    } else {\n      promises.push(getFilteredEventsHelper(dateRange));\n    }\n    let events = flatten(await Promise.all(promises));\n    events = await getBasicEvents(events);\n    events = sortEvents(events, sort);\n    return events;\n  } catch (e) {\n    return Promise.reject(e);\n  }\n}\n\nasync function getFilteredEventsHelper(dateRange, bodyID = null) {\n  const filters = [];\n  if (bodyID) {\n    filters.push(new WhereCondition(['body_id', WHERE_OPERATORS.eq, bodyID]));\n  }\n  if (dateRange.start) {\n    const startDate = moment.utc(dateRange.start, 'YYYY-MM-DD')\n    const start = firebase.firestore.Timestamp.fromMillis(startDate.valueOf());\n    filters.push(new WhereCondition(['event_datetime', WHERE_OPERATORS.gteq, start]));\n  }\n  if (dateRange.end) {\n    const endDate = moment.utc(dateRange.end, 'YYYY-MM-DD').add(1, 'days').subtract(1, 'milliseconds');\n    const end = firebase.firestore.Timestamp.fromMillis(endDate.valueOf());\n    filters.push(new WhereCondition(['event_datetime', WHERE_OPERATORS.lteq, end]));\n  }\n\n  return db.selectRowsAsArray(\n    'event',\n    filters\n  );\n}\n\n/**\n* @param {Object[]} events The list of events\n* @return {Object[]} The formatted list of events with basic information for front-end.\n*/\nasync function getBasicEvents(events) {\n  const allBodies = await getAllBodies();\n  return events.map(event => {\n    const body = allBodies.find(body => body.id === event.body_id);\n    return {\n      id: event.id,\n      body_id: body.id,\n      name: body.name,\n      description: body.description,\n      date: moment\n        .utc(event.event_datetime.toMillis())\n        .toISOString()\n    };\n  });\n}\n\n/**\n* @param {Object[]} events The list of events to filter.\n* @param {Object} dateRange The start and end dates to filter events.\n* @param {string} dateRange.start \n* @param {string} dateRange.end \n* @param {string[]} bodyIDs The list of committee/body ids to filter events.\n* @return {Object[]} A list of events, where each event's date is within\n* date range and the event's body id is in bodyIDs(if its non-empty).\n*/\nfunction filterEvents(events, dateRange, bodyIDs) {\n  return events.filter(event => {\n    if (bodyIDs.length && bodyIDs.indexOf(event.body_id) === -1) {\n      return false;\n    }\n\n    if (dateRange.start && moment.utc(event.date).isBefore(moment.utc(dateRange.start))) {\n      return false;\n    }\n\n    if (dateRange.end) {\n      const endDate = moment.utc(dateRange.end, 'YYYY-MM-DD').add(1, 'days').subtract(1, 'milliseconds');\n      if (moment.utc(event.date).isAfter(endDate)) {\n        return false;\n      }\n    }\n\n    return true;\n  });\n}\n\n/**\n* @param {Object[]} events The list of events to sort.\n* @param {Object} sortOption The sort by and sort order options.\n* @param {string} sortOption.by\n* @param {string} sortOption.order \n* @param {boolean} isSearch Whether the list of events is from the search page.\n* @return {Object[]} A list of events sorted according to sortOption.\n*/\nfunction sortEvents(events, sortOption, isSearch = false) {\n  if (sortOption.by && sortOption.order) {\n    events = orderBy(events, [sortOption.by], [sortOption.order]);\n  } else {\n    events = orderBy(events, [isSearch ? 'value' : 'date'], [ORDER_OPERATORS.desc]);\n  }\n\n  return events;\n}","import { db, WhereCondition, WHERE_OPERATORS, OrderCondition, ORDER_OPERATORS } from './database';\nimport { orderBy } from 'lodash';\nimport moment from 'moment';\n\nexport async function getAllPeople() {\n  const allPeople = await db.selectRowsAsArray(\n    'person',\n    [],\n    new OrderCondition(['full_name', ORDER_OPERATORS.asc])\n  );\n  return allPeople;\n}\n\n/**\n * @param {object} personData takes data from person query, all it needs is {id: id}\n * @returns {object} that has the person information and an array of votes with the following data:\n * { id, matter, name, voteForPerson, decision, eventId, index, eventDate, body_name }\n */\n\nexport async function getVotesForPerson(personId) {\n  const formattedVotes = [];\n  const person = await db.selectRowById('person', personId);\n  const votes = await db.selectRowsAsArray(\n    'vote',\n    [new WhereCondition(['person_id', WHERE_OPERATORS.eq, personId])],\n  );\n  const eventMinutesItemsPromises = votes.map(vote => db.selectRowById('event_minutes_item', vote.event_minutes_item_id));\n  const eventMinutesItems = await Promise.all(eventMinutesItemsPromises);\n  const minutesItemsPromises = eventMinutesItems.map(item => db.selectRowById('minutes_item', item.minutes_item_id));\n  const minutesItems = await Promise.all(minutesItemsPromises);\n  // commented this out for now, but we could link to the file if we get this data\n  // const allMinuteFiles = await getAllResources('minutes_item_file')\n  const eventsPromises = eventMinutesItems.map(item => db.selectRowById('event', item.event_id));\n  const events = await Promise.all(eventsPromises);\n  const allBodies = await db.selectRowsAsArray('body');\n  \n  votes.forEach((voteData, i) => {\n    const eventMinuteItem = eventMinutesItems[i];\n    const minuteItem = minutesItems[i];\n    const event = events[i];\n    const body = allBodies.find(item => item.id === event.body_id);\n    // const file = allMinuteFiles.find(item => item.minutes_item_id === minuteItem.id)\n    const formattedVote = {\n      id: voteData.id,\n      matter: minuteItem.matter,\n      name: minuteItem.name,\n      // what this person voted\n      voteForPerson: voteData.decision,\n      // what the coucile decided\n      decision: eventMinuteItem.decision,\n      eventId: eventMinuteItem.event_id,\n      index: eventMinuteItem.index,\n      eventDate: moment.utc(event.event_datetime.toMillis()).toISOString(),\n      body_name: body.name\n      // file\n    }\n    formattedVotes.push(formattedVote)\n  });\n  const sortedVotes = orderBy(formattedVotes, ['eventDate', 'index'], ['desc', 'desc']);\n  return { ...person, votes: sortedVotes };\n}","import React from 'react';\nimport FilterPopup from '../components/FilterPopup';\nimport SelectDateRange from '../components/SelectDateRange';\nimport SelectFilterOptions from '../components/SelectFilterOptions';\nimport SelectSorting from '../components/SelectSorting';\nimport { getAllBodies } from '../api';\n\nconst EventsFilter = ({\n  filters,\n  handlePopupClose,\n  sortByOptions\n}) => {\n  const mountNodeRef = React.useRef(); //where the FilterPopup will be mounted\n  const [allBodies, setAllBodies] = React.useState([]);\n  const [committeeFilter, dateRangeFilter, sortFilter] = filters;\n  const [committeeQuery, setCommitteeQuery] = React.useState('');\n\n  const getCommitteeNameOptions = () => {\n    return allBodies.map(body => {\n      return {\n        name: body.id,\n        text: body.name\n      }\n    });\n  };\n\n  React.useEffect(() => {\n    //to prevent setting react state when the component is unmounted\n    let didCancel = false;\n\n    const fetchAllBodies = async () => {\n      const allBodies = await getAllBodies();\n      if (!didCancel) {\n        setAllBodies(allBodies);\n      }\n    };\n\n    fetchAllBodies();\n\n    return (() => {\n      didCancel = true;\n    })\n  }, []);\n\n  return (\n    <React.Fragment>\n      <FilterPopup\n        filter={committeeFilter}\n        header='Select Committees'\n        handlePopupClose={handlePopupClose}\n        mountNodeRef={mountNodeRef}>\n        <SelectFilterOptions\n          filter={committeeFilter}\n          options={getCommitteeNameOptions()}\n          optionQuery={committeeQuery}\n          setOptionQuery={setCommitteeQuery} />\n      </FilterPopup>\n      <FilterPopup\n        filter={dateRangeFilter}\n        header='Select Date Range'\n        handlePopupClose={handlePopupClose}\n        mountNodeRef={mountNodeRef}>\n        <SelectDateRange\n          filter={dateRangeFilter} />\n      </FilterPopup>\n      <FilterPopup\n        filter={sortFilter}\n        header='Select Sorting'\n        handlePopupClose={handlePopupClose}\n        mountNodeRef={mountNodeRef}>\n        <SelectSorting\n          filter={sortFilter}\n          sortByOptions={sortByOptions} />\n      </FilterPopup>\n      <div ref={mountNodeRef} />\n    </React.Fragment>\n  )\n};\n\nexport default React.memo(EventsFilter);","import React from 'react';\n\nfunction useDocumentTitle(title) {\n  React.useEffect(() => {\n    document.title = title;\n\n    return () => {\n      document.title = 'Council Data Project - Seattle';\n    };\n  }, [title]);\n\n}\n\nexport default useDocumentTitle;","import React from 'react';\n\n/**\n * @param {Object} checkboxes The object representation of a list of checkboxes,\n * where the keys are the different options, and each value is a boolean(whether the option is selected).\n * @return {string[]} The list of selected options.\n */\nexport function getSelectedOptions(checkboxes) {\n  return Object.keys(checkboxes).filter(k => checkboxes[k]);\n}\n\n/**\n* @param {Object} initialState The inital filter object, where the keys are the filter options and values are the filter values.\n* @param {string} filterName The name of the filter. It also used as the default text representation,\n* when all filter values are the default filter value.\n* @param {(boolean|string)} defaultData The default filter value.\n* @param {Function} textRepFunction The function to generate the text representation of the filter object.\n* @return {Object} An object that encapsulates the fitler object state along with other methods to handle state changes\n* and get other useful informations about the state.\n*/\nfunction useFilter(initialState, filterName, defaultData, textRepFunction) {\n  // value is the filter object, set is the function that updates it\n  const [value, set] = React.useState(initialState);\n\n  /**\n   * Assign the default filter value to all filter options.\n   */\n  const clear = () => {\n    set(prevValue => {\n      const newValue = { ...prevValue };\n      Object.keys(newValue).forEach(option => newValue[option] = defaultData);\n      return newValue;\n    });\n  }\n\n  /**\n   * Callback for when a filter value has changed in order\n   * to set the filter option to a new filter value.\n   * @param {string} option The filter option.\n   * @param {(string|boolean)} dataValue The new filter value.\n   */\n  const handleChange = (option, dataValue) => {\n    set(prevValue => {\n      return { ...prevValue, [option]: dataValue };\n    });\n  }\n\n  /**\n   * @return {string} The text representation of the filter object.\n   */\n  const getTextRep = () => {\n    return textRepFunction(value, filterName);\n  }\n\n  /**\n * \n * @return {boolean} Whether any of the filter values does not equal the default filter value.\n */\n  const isActive = () => {\n    return Object.values(value).some(v => v !== defaultData);\n  }\n\n  /**\n   *\n   * @param {Object} otherValue The other filter object that is of the same type as this filter object.\n   * @return {boolean} Whether the other filter object is the same as this filter object.\n   */\n  const isSameValue = (otherValue) => {\n    if (!otherValue) {\n      return !isActive();\n    }\n    const options = Object.keys(value);\n    let option;\n    for (option of options) {\n      if (value[option] && !otherValue.hasOwnProperty(option)) {\n        return false;\n      }\n      if ((value[option] !== otherValue[option]) && otherValue.hasOwnProperty(option)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  return { filterName, value, set, clear, handleChange, getTextRep, isActive, isSameValue };\n}\n\nexport default useFilter;","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport EventCardGroup from \"../components/EventCardGroup\";\nimport EventsFilter from \"./EventsFilter\";\nimport { getDateText } from \"../components/SelectDateRange\";\nimport { getCheckboxText } from \"../components/SelectFilterOptions\";\nimport { getSortText } from \"../components/SelectSorting\";\nimport useDocumentTitle from \"../hooks/useDocumentTitle\";\nimport useFilter, { getSelectedOptions } from \"../hooks/useFilter\";\nimport { getAllEvents, getFilteredEvents } from \"../api\";\n\nexport const FiltersSection = styled.div({\n  position: \"sticky\",\n  top: \"0\",\n  backgroundColor: \"white\",\n  zIndex: \"1\",\n  padding: \"1em 0 2em\",\n  \"> .ui.button\": {\n    marginBottom: \"0.5em\",\n    \"@media(max-width:500px)\": {\n      width: \"100%\"\n    }\n  }\n});\n\nexport const ResultCount = styled.span({\n  display: \"block\",\n  color: \"grey\",\n  marginBottom: \"2em\"\n});\n\nexport const LoadingText = styled.span({\n  color: \"grey\",\n  fontWeight: \"700\",\n  fontSize: \"1.5em\",\n  marginTop: \"1em\",\n});\n\nexport const Results = styled.div({\n  paddingLeft: \"1em\"\n});\n\nconst EventCardGroupContainer = ({ query }) => {\n  const [initialGetEventsComplete, setInitialGetEventsComplete] = React.useState(false);\n  const [filterEventsComplete, setFilterEventsComplete] = React.useState(true);\n  const [visibleEvents, setVisibleEvents] = React.useState([]);\n  const dateRangeFilter = useFilter({ start: '', end: '' }, 'Date', '', getDateText);\n  const committeeFilter = useFilter({}, 'Committee', false, getCheckboxText);\n  const sortFilter = useFilter({ by: '', order: '' }, 'Sort', '', getSortText);\n  useDocumentTitle('Committee Events');\n\n  React.useEffect(() => {\n    //to prevent setting react state when the component is unmounted\n    let didCancel = false;\n\n    const fetchAllEvents = async () => {\n      const allEvents = await getAllEvents();\n      if (!didCancel) {\n        setVisibleEvents(allEvents);\n        setInitialGetEventsComplete(true);\n      }\n    };\n\n    fetchAllEvents();\n\n    return (() => {\n      didCancel = true;\n    });\n  }, []);\n\n  const prevCommitteeRef = React.useRef();\n  const prevDateRangeRef = React.useRef();\n  const prevSortRef = React.useRef();\n\n  // handlePopupClose is a callback for when one of the FilterPopups in EventsFilter closes. \n  // It will perform filtering, depending on whether any of filter values have changed.\n  const handlePopupClose = async () => {\n    if (!committeeFilter.isSameValue(prevCommitteeRef.current) ||\n      !dateRangeFilter.isSameValue(prevDateRangeRef.current) ||\n      !sortFilter.isSameValue(prevSortRef.current)) {\n      window.scroll(0, 0);\n      setFilterEventsComplete(false);\n      setVisibleEvents([]);\n      const events = await getFilteredEvents(dateRangeFilter.value,\n        getSelectedOptions(committeeFilter.value),\n        sortFilter.value);\n      setVisibleEvents(events);\n      prevCommitteeRef.current = committeeFilter.value;\n      prevDateRangeRef.current = dateRangeFilter.value;\n      prevSortRef.current = sortFilter.value;\n      setFilterEventsComplete(true);\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <FiltersSection>\n        <EventsFilter\n          filters={[committeeFilter, dateRangeFilter, sortFilter]}\n          handlePopupClose={handlePopupClose}\n          sortByOptions={[{ label: 'Committee', value: 'name' },\n          { label: 'Date', value: 'date' }]} />\n      </FiltersSection>\n      <Results>\n        {(!initialGetEventsComplete || !filterEventsComplete) ? (\n          <LoadingText>Loading...</LoadingText>\n        ) : (\n            <ResultCount>{visibleEvents.length} results</ResultCount>\n          )}\n        <EventCardGroup events={visibleEvents} />\n      </Results>\n    </React.Fragment>\n  );\n};\n\nexport default EventCardGroupContainer;\n","import React from \"react\";\nimport { Button, Form } from \"semantic-ui-react\";\nimport EventCardGroup from \"../components/EventCardGroup\";\nimport EventsFilter from \"./EventsFilter\";\nimport { getDateText } from \"../components/SelectDateRange\";\nimport { getCheckboxText } from \"../components/SelectFilterOptions\";\nimport { getSortText } from \"../components/SelectSorting\";\nimport { FiltersSection, ResultCount, LoadingText, Results } from \"./AllEvents\";\nimport useDocumentTitle from \"../hooks/useDocumentTitle\";\nimport useFilter, { getSelectedOptions } from \"../hooks/useFilter\";\nimport { useHistory } from \"react-router-dom\";\nimport { getEventsByIndexedTerm } from \"../api\";\n\nconst EventCardGroupContainer = ({\n  query,\n  filterValues\n}) => {\n  const [committeeFilterValue, dateRangeFilterValue, sortFilterValue] = filterValues;\n  const [initialGetEventsComplete, setInitialGetEventsComplete] = React.useState(false);\n  const [searchQuery, setSearchQuery] = React.useState(query);\n  const [visibleEvents, setVisibleEvents] = React.useState([]);\n  const dateRangeFilter = useFilter(dateRangeFilterValue, 'Date', '', getDateText);\n  const committeeFilter = useFilter(committeeFilterValue, 'Committee', false, getCheckboxText);\n  const sortFilter = useFilter(sortFilterValue, 'Sort', '', getSortText);\n  useDocumentTitle(`Search - ${searchQuery}`);\n  const history = useHistory();\n\n  React.useEffect(() => {\n    //to prevent setting react state when the component is unmounted\n    let didCancel = false;\n\n    const fetchEventsByIndexedTerm = async () => {\n      const events = await getEventsByIndexedTerm(query,\n        dateRangeFilterValue,\n        getSelectedOptions(committeeFilterValue),\n        sortFilterValue);\n      if (!didCancel) {\n        setVisibleEvents(events);\n        setInitialGetEventsComplete(true);\n      }\n    };\n\n    fetchEventsByIndexedTerm();\n\n    return (() => {\n      didCancel = true;\n    });\n  }, [query, committeeFilterValue, dateRangeFilterValue, sortFilterValue]);\n\n  const onSearchQueryChange = (e, { value }) => {\n    setSearchQuery(value);\n  };\n\n  const prevCommitteeRef = React.useRef();\n  const prevDateRangeRef = React.useRef();\n  const prevSortRef = React.useRef();\n  const prevSearchRef = React.useRef(query);\n\n  // handlePopupClose is a callback for when one of the FilterPopups in EventsFilter closes. \n  // It will perform filtering, depending on whether any of filter values or the searchQuery have changed.\n  const handlePopupClose = () => {\n    if (!committeeFilter.isSameValue(prevCommitteeRef.current) ||\n      !dateRangeFilter.isSameValue(prevDateRangeRef.current) ||\n      !sortFilter.isSameValue(prevSortRef.current) ||\n      prevSearchRef.current !== searchQuery) {\n      window.scroll(0, 0);\n      setInitialGetEventsComplete(false);\n      setVisibleEvents([]);\n      prevCommitteeRef.current = committeeFilter.value;\n      prevDateRangeRef.current = dateRangeFilter.value;\n      prevSortRef.current = sortFilter.value;\n      prevSearchRef.current = searchQuery;\n      history.replace({\n        pathname: '/search',\n        search: `?q=${searchQuery.trim().replace(/\\s+/g, '+')}`,\n        state: {\n          query: searchQuery,\n          committeeFilterValue: committeeFilter.value,\n          dateRangeFilterValue: dateRangeFilter.value,\n          sortFilterValue: sortFilter.value\n        }\n      });\n    }\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    handlePopupClose();\n  };\n\n  return (\n    <React.Fragment>\n      <FiltersSection>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group widths='2'>\n            <Form.Input\n              placeholder='Enter a keyword to search meeting transcripts'\n              action={<Button type='submit' primary>Search</Button>}\n              value={searchQuery}\n              onChange={onSearchQueryChange} />\n          </Form.Group>\n        </Form>\n        <EventsFilter\n          filters={[committeeFilter, dateRangeFilter, sortFilter]}\n          handlePopupClose={handlePopupClose}\n          sortByOptions={[{ label: 'Committee', value: 'name' },\n          { label: 'Date', value: 'date' },\n          { label: 'Relevance ', value: 'value' }]} />\n      </FiltersSection>\n      <Results>\n        {(!initialGetEventsComplete) ? (\n          <LoadingText>Loading...</LoadingText>\n        ) : (\n            <ResultCount>{visibleEvents.length} results</ResultCount>\n          )}\n        <EventCardGroup events={visibleEvents} query={prevSearchRef.current} />\n      </Results>\n    </React.Fragment>\n  );\n};\n\nexport default EventCardGroupContainer;","import React from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport styled from \"@emotion/styled\";\nimport queryString from \"query-string\";\nimport EventCardGroup from \"../containers/EventCardGroup\";\n\nconst Layout = styled(Container)({\n  minHeight: \"100vh\"\n});\n\nconst ContentContainer = styled(Container)({\n  marginTop: \"2em !important\",\n  marginBottom: \"5em !important\"\n});\n\nconst Search = ({ location }) => {\n  const { q } = queryString.parse(location.search);\n  let query = q ? q.trim().replace(/\\+/g, ' ') : '';\n  let committeeFilterValue = {};\n  let dateRangeFilterValue = { start: '', end: '' };\n  let sortFilterValue = { by: '', order: '' };\n  if (location.state) {\n    query = location.state.query || query;\n    committeeFilterValue = location.state.committeeFilterValue || committeeFilterValue;\n    dateRangeFilterValue = location.state.dateRangeFilterValue || dateRangeFilterValue;\n    sortFilterValue = location.state.sortFilterValue || sortFilterValue;\n  }\n\n  return (\n    <Layout>\n      <ContentContainer>\n        <EventCardGroup\n          query={query}\n          filterValues={[committeeFilterValue, dateRangeFilterValue, sortFilterValue]}\n        />\n      </ContentContainer>\n    </Layout>\n  );\n};\n\nexport default Search;\n","function hhmmss(sec_num) {\n  sec_num = parseInt(sec_num, 10); // don't forget the second param\n  var hours = Math.floor(sec_num / 3600);\n  var minutes = Math.floor((sec_num - hours * 3600) / 60);\n  var seconds = sec_num - hours * 3600 - minutes * 60;\n\n  if (hours < 10) {\n    hours = \"0\" + hours;\n  }\n  if (minutes < 10) {\n    minutes = \"0\" + minutes;\n  }\n  if (seconds < 10) {\n    seconds = \"0\" + seconds;\n  }\n  return hours + \":\" + minutes + \":\" + seconds;\n}\n\nexport default hhmmss;\n","import React from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport { AutoSizer, CellMeasurer, CellMeasurerCache, List, WindowScroller } from 'react-virtualized';\nimport { Icon } from \"semantic-ui-react\";\nimport Highlighter from \"react-highlight-words\";\nimport styled from \"@emotion/styled\";\nimport hhmmss from \"../utils/hhmmss\";\n\nconst TranscriptItem = styled.div({\n  display: \"flex\",\n  flexWrap: \"wrap\",\n  alignItems: \"center\",\n  margin: \"1em 0\",\n  padding: \"0.2em\"\n});\n\nconst TranscriptItemText = styled.div(props => ({\n  width: props.isSearch ? \"100%\" : \"85%\",\n  order: props.isSearch ? \"0\" : \"1\",\n  boxSizing: \"border-box\",\n  fontSize: \"16px\",\n  lineHeight: \"1.5em\",\n  \"@media(max-width:720px)\": {\n    width: \"100%\",\n    order: \"0\"\n  }\n}));\n\nconst TimeStamp = styled.div(props => ({\n  width: props.isSearch ? \"100%\" : \"15%\",\n  order: props.isSearch ? \"1\" : \"0\",\n  boxSizing: \"border-box\",\n  padding: props.isSearch ? \"0\" : \"0.5em\",\n  \"@media(max-width:720px)\": {\n    width: \"100%\",\n    padding: \"0\",\n    order: \"1\"\n  }\n}));\n\nconst EventTranscript = ({\n  searchText,\n  transcript,\n  handleSeek,\n  isSearch\n}) => {\n  const windowScrollerRef = React.useRef(null);\n\n  const cache = new CellMeasurerCache({\n    fixedWidth: true,\n    defaultHeight: 100,\n  });\n\n  React.useEffect(() => {\n    const handleUpdateScrollPosition = () => {\n      if (windowScrollerRef.current) {\n        windowScrollerRef.current.updatePosition();\n      }\n    };\n    document.addEventListener(\"update-scroll-position\", handleUpdateScrollPosition);\n    return () => {\n      document.removeEventListener(\"update-scroll-position\", handleUpdateScrollPosition);\n    };\n  }, []);\n\n  const onResize = () => {\n    cache.clearAll();\n  };\n\n  const Row = ({ index, parent, key, style }) => (\n    <CellMeasurer\n      key={key}\n      cache={cache}\n      parent={parent}\n      columnIndex={0}\n      rowIndex={index}\n    >\n      <div style={style}>\n        <TranscriptItem>\n          <TimeStamp isSearch={isSearch}>\n            <Button size=\"tiny\" onClick={() => handleSeek(transcript[index].start_time)}>\n              <Icon name=\"play\" />\n              {hhmmss(transcript[index].start_time)}\n            </Button>\n          </TimeStamp>\n          <TranscriptItemText isSearch={isSearch}>\n            <Highlighter\n              searchWords={[searchText]}\n              autoEscape={true}\n              textToHighlight={transcript[index].text}\n            />\n          </TranscriptItemText>\n        </TranscriptItem>\n      </div>\n    </CellMeasurer>\n  );\n\n  if (isSearch) {\n    return (\n      <AutoSizer onResize={onResize}>\n        {({ width, height }) => (\n          <List\n            deferredMeasurementCache={cache}\n            height={height}\n            rowCount={transcript.length}\n            rowHeight={cache.rowHeight}\n            rowRenderer={Row}\n            scrollToIndex={0}\n            style={{ willChange: \"\" }}\n            width={width}\n          />\n        )}\n      </AutoSizer>\n    );\n  } else {\n    return (\n      <WindowScroller ref={windowScrollerRef}>\n        {({ height, isScrolling, onChildScroll, scrollTop }) => (\n          <AutoSizer disableHeight onResize={onResize}>\n            {({ width }) => (\n              <List\n                autoHeight\n                deferredMeasurementCache={cache}\n                height={height}\n                isScrolling={isScrolling}\n                onScroll={onChildScroll}\n                rowCount={transcript.length}\n                rowHeight={cache.rowHeight}\n                rowRenderer={Row}\n                scrollTop={scrollTop}\n                style={{ willChange: \"\" }}\n                width={width}\n              />)}\n          </AutoSizer>\n        )}\n      </WindowScroller>\n    );\n  }\n};\n\nexport default React.memo(EventTranscript);","import React from \"react\";\nimport { Input } from \"semantic-ui-react\";\nimport styled from \"@emotion/styled\";\nimport EventTranscript from \"./EventTranscript\";\nimport isSubstring from \"../utils/isSubstring\";\n\nconst StyledEventSearch = styled.div({\n  margin: \"1em 0\",\n  width: \"100%\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  boxSizing: \"border-box\",\n  \"@media (min-aspect-ratio:5/4), (min-width:1200px)\": {\n    width: \"40%\",\n    margin: \"0\"\n  }\n});\n\nconst Subheader = styled.h2({ width: \"100%\" });\n\nconst SearchInput = styled(Input)({\n  width: \"100%\",\n  fontSize: \"16px !important\",\n  lineHeight: \"1.5 !important\"\n});\n\nconst SearchResultCount = styled.span({\n  display: \"block\",\n  marginTop: \"1em\",\n  color: \"grey\",\n  paddingLeft: \"15px\"\n});\n\nconst TranscriptSearchHelpMessage = styled.span({\n  display: \"block\",\n  marginTop: \"1em\",\n  fontSize: \"16px !important\",\n  lineHeight: \"1.5 !important\",\n  paddingLeft: \"15px\"\n});\n\nconst SearchResultsWrapper = styled.div({\n  marginTop: \"1em\",\n  border: \"1px solid lightgray\",\n  borderRadius: \"0.28rem\",\n  boxSizing: \"border-box\",\n  minHeight: \"calc(.5625 * 90vw)\",\n  \"@media (min-aspect-ratio:5/4), (min-width:1200px)\": {\n    flex: \"1 1 auto\",\n    minHeight: \"0\"\n  }\n});\n\nconst EventSearch = ({\n  transcript,\n  handleSeek,\n  mediaQueriesMatches,\n  query\n}) => {\n  const [transcriptSearchText, setTranscriptSearchText] = React.useState(query);\n\n  const handleTranscriptSearch = (e, { value }) => {\n    setTranscriptSearchText(value);\n    if(!mediaQueriesMatches) {\n      document.dispatchEvent(new CustomEvent(\"update-scroll-position\"));\n    }\n  };\n\n  const transcriptItems = transcript.filter(({ text }) => isSubstring(text, transcriptSearchText));\n\n  return (\n    <StyledEventSearch>\n      <Subheader>Search Transcript</Subheader>\n      <SearchInput\n        onChange={handleTranscriptSearch}\n        value={transcriptSearchText}\n        placeholder=\"Search transcript\"\n      />\n      {transcriptSearchText !== \"\" && (\n        <SearchResultCount>\n          {transcriptItems.length} results\n        </SearchResultCount>\n      )}\n      {transcriptSearchText !== \"\" && transcriptItems.length > 0 && (\n        <SearchResultsWrapper>\n          <EventTranscript\n            searchText={transcriptSearchText}\n            transcript={transcriptItems}\n            handleSeek={handleSeek}\n            isSearch={true}\n          />\n        </SearchResultsWrapper>\n      )}\n      {transcriptSearchText === \"\" && (\n        <TranscriptSearchHelpMessage>\n          Enter a search term to get results.\n        </TranscriptSearchHelpMessage>\n      )}\n    </StyledEventSearch>\n  );\n};\n\nexport default EventSearch;","import React, { forwardRef, Fragment, useReducer, useRef, useState } from 'react';\nimport { Button, Form, Icon, Input, Modal, Ref } from 'semantic-ui-react';\nimport { useLocation } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nconst TimePointInput = styled(Input)(props => ({\n  // add black line below time point input\n  borderBottomColor: props.disabled ? 'white' : 'black',\n  borderBottomStyle: 'solid',\n  borderBottomWidth: '1.5px',\n  width: '10em'\n}));\n\nconst ShareVideoModal = styled(Modal)({\n  // move close icon inside modal\n  'i.close': {\n    top: '0 !important',\n    right: '0 !important',\n    color: 'black !important'\n  }\n});\n\nconst ButtonWithRef = forwardRef((props, ref) => (\n  // Forward a React reference into a button.\n  // Needed in order to provide additional styling to share button,\n  // that serves as a trigger to open a modal\n  <Ref innerRef={ref}>\n    <Button {...props} />\n  </Ref>\n));\n\nconst ShareButton = styled(ButtonWithRef)({\n  backgroundColor: 'white !important',\n  'i.share': {\n    // Increase the distance share icon and share text\n    paddingRight: '1.5em'\n  }\n});\n\n// In anticipation of other buttons to be added next to share button,\n// make this inline-block so that they all appear on the same horizontal line.\nconst ModalMountNode = styled.div({\n  display: 'inline-block'\n});\n\n/**\n *\n * @param {string} timePointStr The str representation of a time point. e.g. 1:23:15\n * @return {(int|NaN)} The time point in total seconds. Or NaN, if the str contains\n * any non-digits.\n */\nconst toSeconds = (timePointStr) => {\n  const nums = timePointStr.trim().split(':').reverse();\n  let totalSeconds = 0;\n  nums.forEach((num, i) => {\n    num = num.trim();\n    if (num) {\n      if (isNaN(num) || num.includes('-')) {\n        // num is not a number, or is negative\n        totalSeconds += NaN;\n      } else {\n        totalSeconds += parseFloat(num) * Math.pow(60, i);\n      }\n    }\n  });\n  if (totalSeconds) {\n    totalSeconds = Math.floor(totalSeconds);\n  }\n  return totalSeconds;\n};\n\n/**\n *\n * @param {(int|NaN)} totalSeconds The total number of seconds of a time point.\n * @return {string} The time point str. e.g. 1:23:15, or `INVALID TIME POINT` if totalSeconds is not a number.\n */\nconst toTimePointStr = (totalSeconds) => {\n  if (isNaN(totalSeconds)) {\n    return 'INVALID TIME POINT';\n  }\n\n  totalSeconds = Math.floor(parseFloat(totalSeconds));\n\n  let hours = Math.floor(totalSeconds / 3600);\n  let minutes = Math.floor((totalSeconds - (hours * 3600)) / 60);\n  let seconds = totalSeconds - (hours * 3600) - (minutes * 60);\n\n  if (seconds < 10) {\n    seconds = `0${seconds}`;\n  }\n  if (hours > 0 && minutes < 10) {\n    minutes = `0${minutes}`;\n  }\n\n  let timePointStr = `${minutes}:${seconds}`;\n  if (hours) {\n    timePointStr = `${hours}:${timePointStr}`;\n  }\n\n  return timePointStr;\n};\n\nconst initialTimePoint = {\n  // The time point str\n  value: '',\n  // Whether the user can enter a value to the time point input html element\n  isDisabled: false,\n  // Whether value(in seconds) is added to the share link url\n  isActive: false\n};\n\n/**\n *\n * @param {Object} timePoint The time point state.\n * @param {string} timePoint.value\n * @param {boolean} timePoint.isDisabled\n * @param {boolean} timePoint.isActive\n * @param {Object} action The action to change the time point state.\n * @param {string} action.type The str description of the action.\n * @param {Object} [action.payload] The action's data.\n * @return {Object} New time point state.\n */\nconst timePointReducer = (timePoint, action) => {\n  switch (action.type) {\n    case 'UPDATE_VALUE':\n      return { ...timePoint, value: action.payload.value };\n    case 'VALIDATE_VALUE':\n      const newValue = toTimePointStr(toSeconds(timePoint.value));\n      return { ...timePoint, value: newValue };\n    case 'UPDATE_ISDISABLED':\n      return { ...timePoint, isDisabled: action.payload.isDisabled };\n    case 'UPDATE_ISACTIVE':\n      return { ...timePoint, isActive: action.payload.isActive };\n    default:\n      return timePoint;\n  }\n};\n\nconst EventShareVideo = ({\n  videoPlayerRef\n}) => {\n  // A reference to the html element where the modal is mounted\n  const mountNodeRef = useRef();\n  // A reference to the share link url html element\n  const shareLinkRef = useRef();\n  // A reference to the time point input html element\n  const timePointRef = useRef();\n  // Get the location object that represents the current URL\n  const location = useLocation();\n  // open is a React state, whether the modal is open. setOpen is the function to update open\n  const [open, setOpen] = useState(false);\n  // timePoint is a React state. dispatch function is used to send an action to timePointReducer\n  // to change the timePoint state\n  const [timePoint, dispatch] = useReducer(timePointReducer, initialTimePoint);\n\n  // Callback to handle opening of modal\n  const handleOpen = () => {\n    let currentTime;\n    if (videoPlayerRef.current) {\n      const { player } = videoPlayerRef.current.getState();\n      currentTime = player.readyState === 4 ? player.currentTime : 0;\n    } else {\n      currentTime = 0;\n    }\n    // initially, the time point value is the video's current time\n    dispatch({ type: 'UPDATE_VALUE', payload: { value: toTimePointStr(currentTime) } });\n    // initially, the user can enter a value for the time point input html element\n    dispatch({ type: 'UPDATE_ISDISABLED', payload: { isDisabled: false } });\n    // initially, the time point value(in seconds) is not added to the share link url\n    dispatch({ type: 'UPDATE_ISACTIVE', payload: { isActive: false } });\n    setOpen(true);\n  };\n\n  // Callback to handle closing of modal\n  const handleClose = () => {\n    timePointRef.current.inputRef.current.removeEventListener('blur', validateTimePointCb);\n    setOpen(false);\n  };\n\n  // Callback to handle `Start at` checkbox changes\n  const onTimePointIsActiveChange = (e, { checked }) => {\n    dispatch({ type: 'VALIDATE_VALUE' });\n    dispatch({ type: 'UPDATE_ISDISABLED', payload: { isDisabled: !checked } });\n    dispatch({ type: 'UPDATE_ISACTIVE', payload: { isActive: checked } });\n  };\n\n  // Callback to handle copy share link url button click\n  const onCopyShareLink = () => {\n    // select the content of shareLinkRef, which is the share link url\n    shareLinkRef.current.select();\n    // copy the content to the clipboard\n    document.execCommand('copy');\n  };\n\n  // Get the share link url\n  const getVideoShareLink = () => {\n    let totalSeconds = toSeconds(timePoint.value);\n    let videoShareLink = `${document.location.href.split('#')[0]}#${location.pathname}`;\n    return (timePoint.isActive && totalSeconds) ?\n      `${videoShareLink}?t=${totalSeconds}` :\n      `${videoShareLink}`;\n  };\n\n  // Callback to handle time point value changes\n  const onTimePointValueChange = (e, { value }) => {\n    dispatch({ type: 'UPDATE_VALUE', payload: { value: value } });\n  };\n\n  // Callback to handle when the user press enter while the time point input html element is in focus,\n  // or when the time point input html element becomes out of focus\n  const validateTimePointCb = () => {\n    dispatch({ type: 'VALIDATE_VALUE' });\n  };\n\n  // Callback to handle when the modal is mounted\n  const onModalMount = () => {\n    // Add an event listener for when the time point input html element becomes out of focus\n    timePointRef.current.inputRef.current.addEventListener('blur', validateTimePointCb);\n  };\n\n  return (\n    <Fragment>\n      <ShareVideoModal\n        closeIcon\n        trigger={\n          <ShareButton compact icon onClick={handleOpen}>\n            <Icon name='share' />\n            SHARE\n          </ShareButton>\n        }\n        open={open}\n        onClose={handleClose}\n        mountNode={mountNodeRef.current}\n        onMount={onModalMount}\n        size='small'\n      >\n        <Modal.Header>Share</Modal.Header>\n        <Modal.Content>\n          <Input\n            fluid\n            action={<Button primary content='Copy' onClick={onCopyShareLink} />}\n            ref={shareLinkRef}\n            value={getVideoShareLink()} />\n          <br />\n          <Form onSubmit={validateTimePointCb}>\n            <Form.Group>\n              <Form.Checkbox\n                label={`Start at`}\n                checked={timePoint.isActive}\n                onChange={onTimePointIsActiveChange} />\n              <TimePointInput\n                disabled={timePoint.isDisabled}\n                transparent\n                value={timePoint.value}\n                onChange={onTimePointValueChange}\n                ref={timePointRef} />\n            </Form.Group>\n          </Form>\n        </Modal.Content>\n      </ShareVideoModal>\n      <ModalMountNode ref={mountNodeRef} />\n    </Fragment>\n  );\n};\n\nexport default EventShareVideo;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst MinuteList = styled.ol({\n  listStylePosition: \"outside\",\n  paddingLeft: \"1.5em\"\n});\n\nconst MinuteTitle = styled.div({\n  fontSize: \"1em\",\n  fontWeight: \"500\"\n});\n\nconst MinuteDescription = styled.div({\n  fontSize: \"0.95em\"\n});\n\nconst FileList = styled.ul({\n  listStylePosition: \"outside\",\n  listStyleType: \"disc\",\n  paddingLeft: \"2em\"\n});\n\nconst EventMinutes = ({\n  minutes,\n  scPageUrl\n}) => {\n  return (\n    <React.Fragment>\n      <h3>Minutes</h3>\n      <MinuteList>\n        {minutes.map(({ minutes_item }) => (\n          <li key={minutes_item.id}>\n            <MinuteTitle>{minutes_item.matter ? minutes_item.matter : minutes_item.name}</MinuteTitle>\n            {minutes_item.matter && minutes_item.matter !== minutes_item.name && <MinuteDescription>{minutes_item.name}</MinuteDescription>}\n            {minutes_item.file.length > 0 && <FileList>\n              {minutes_item.file.map(({ id, name, uri }) => (\n                <li key={id}>\n                  <a target=\"_blank\" rel=\"noopener noreferrer\" href={uri}>{name}</a>\n                </li>\n              ))}\n            </FileList>}\n          </li>\n        ))}\n      </MinuteList>\n      <h3>Links</h3>\n      <a href={scPageUrl}>Seattle Channel Event Page</a>\n    </React.Fragment>\n  );\n};\n\nexport default EventMinutes;","import React from 'react'\nimport { Table } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport styled from \"@emotion/styled\";\nimport getDateTime from \"../utils/getDateTime\";\n\nconst Headers = [\n  {\n    accessor: 'matter',\n    text: 'Matter',\n    width: '2'\n  },\n  {\n    accessor: 'decision',\n    text: 'Decision',\n    width: '1'\n  },\n  {\n    accessor: 'name',\n    text: 'Name',\n    width: '6'\n  },\n  {\n    accessor: 'votingRecords',\n    text: 'Vote',\n    width: '5'\n  }\n]\n\nconst MiniTable = styled('div')({\n  display: 'flex'\n});\n\nconst Person = styled('div')({\n  width: '70%'\n});\n\nconst Decision = styled('div')({\n  width: '30%'\n});\n\nconst StyledTableHeader = styled(Table.Header)({\n  '@media(max-width:767px)': {\n    display: 'none !important'\n  }\n});\n\n\nconst VotingTable = ({ votingData, isPerson }) => (\n  <Table striped>\n    <StyledTableHeader>\n      <Table.Row>\n        {Headers.map(headerMetaData => (<Table.HeaderCell\n          key={headerMetaData.text}>{headerMetaData.text}\n          </Table.HeaderCell> \n        ))}\n        {/* If we are rendering votes for a person, we want to link to the event */}\n        {isPerson && <Table.HeaderCell key={'Event'}>Event</Table.HeaderCell>}\n      </Table.Row>\n    </StyledTableHeader>\n    <Table.Body>\n      {votingData.map(votingDatum => (\n        <Table.Row key={votingDatum.id}>\n          {Headers.map(headerMetaData => {\n            if (headerMetaData.accessor !== 'votingRecords') {\n              return (\n                <Table.Cell key={headerMetaData.accessor} width={headerMetaData.width}>\n                  {votingDatum[headerMetaData.accessor]}\n                </Table.Cell>\n              )\n            }\n            if (votingDatum.formattedIndividualVotes) {\n              return (\n                <Table.Cell key={headerMetaData.accessor} width={headerMetaData.width}>\n                  {votingDatum.formattedIndividualVotes.map(record => {\n                    return (\n                      <MiniTable key={record.full_name}>\n                        <Person>\n                          <Link to={`/people/${record.person_id}`}>\n                            {record.full_name}\n                          </Link>\n                        </Person>\n                        <Decision>\n                          {record.decision}\n                        </Decision>\n                      </MiniTable>\n                    )\n                  })}\n                </Table.Cell>\n              )\n            } else {\n              return (\n                <React.Fragment key={headerMetaData.accessor}>\n                  <Table.Cell singleLine={true}>\n                    {votingDatum.voteForPerson}\n                  </Table.Cell>\n                  <Table.Cell>\n                    <Link to={`/events/${votingDatum.eventId}`}>\n                      <span>{votingDatum.body_name}</span>\n                    </Link>\n                    <div>{getDateTime(votingDatum.eventDate)}</div>\n                  </Table.Cell>\n                </React.Fragment>\n              )\n            }\n          })}\n        </Table.Row>\n      ))}\n    </Table.Body>\n  </Table>\n)\n\nexport default VotingTable\n","import React from \"react\";\nimport { Menu, Sticky } from \"semantic-ui-react\";\nimport EventMinutes from \"./EventMinutes\";\nimport EventTranscript from \"./EventTranscript\";\nimport VotingTable from \"./VotingTable\";\nimport styled from \"@emotion/styled\";\n\nconst StyledEventTabs = styled.div({\n  margin: \"1em 0\",\n  width: \"100%\",\n  fontSize: \"16px\",\n  lineHeight: \"1.5\",\n  \"a.item\": {\n    fontSize: \"1.3em !important\"\n  }\n});\n\nconst StyledEventMenu = styled(Menu)({\n  borderBottom: \"0 !important\",\n  marginBottom: \"1em !important\",\n  paddingTop: \"1em !important\",\n  backgroundColor: \"white !important\",\n  zIndex: \"0 !important\",\n  width: \"100%\"\n});\n\nconst EventTabs = ({\n  minutes,\n  scPageUrl,\n  transcript,\n  votes,\n  handleSeek,\n  topOffset,\n  mediaQueriesMatches\n}) => {\n  const [activeItem, setActiveItem] = React.useState(\"details\");\n  const contextRef = React.useRef(null);\n\n  React.useEffect(() => {\n    const domRect = contextRef.current.getBoundingClientRect();\n    if (domRect.top < 0) {\n      contextRef.current.scrollIntoView(true);\n      if (!mediaQueriesMatches) {\n        window.scrollBy(0, -topOffset);\n      }\n    }\n  }, [activeItem, mediaQueriesMatches, topOffset]);\n\n  const handleItemClick = (e, { name }) => {\n    setActiveItem(name);\n  };\n\n  return (\n    <StyledEventTabs ref={contextRef}>\n      <Sticky\n        context={contextRef}\n        offset={topOffset}\n        styleElement={{ zIndex: \"1\" }}\n      >\n        <StyledEventMenu secondary pointing>\n          <Menu.Item active={activeItem === \"details\"} name=\"details\" onClick={handleItemClick} />\n          <Menu.Item active={activeItem === \"transcript\"} name=\"transcript\" onClick={handleItemClick} />\n          <Menu.Item active={activeItem === \"votes\"} name=\"votes\" onClick={handleItemClick} />\n        </StyledEventMenu>\n      </Sticky>\n      {{\n        details: <EventMinutes minutes={minutes} scPageUrl={scPageUrl} />,\n        transcript: <EventTranscript\n          searchText={\"\"}\n          transcript={transcript}\n          handleSeek={handleSeek}\n          isSearch={false}\n        />,\n        votes: votes.length ? <VotingTable votingData={votes} /> : <div>No votes found for this event.</div>\n      }[activeItem]}\n    </StyledEventTabs>\n  );\n};\n\nexport default React.memo(EventTabs);\n","import { useState, useEffect } from 'react';\n/**\n * \n * @param {string} mediaQuery The string representing the media query to parse, e.g. (min-width:500px)\n * @return {boolean} A Boolean that is true if the document currently matches the media query, or false if not.\n */\nfunction useMatchMedia(mediaQuery) {\n  const [matches, setMatches] = useState(() => matchMedia(mediaQuery).matches);\n\n  useEffect(() => {\n    const mediaQueryList = matchMedia(mediaQuery);\n\n    const onChange = (event) => {\n      setMatches(event.matches);\n    };\n\n    mediaQueryList.addListener(onChange);\n\n    return(() =>{\n      mediaQueryList.removeListener(onChange);\n    })\n  }, [mediaQuery]);\n\n  return matches;\n}\n\nexport default useMatchMedia;","import React from \"react\";\nimport EventSearch from \"./EventSearch\";\nimport EventShareVideo from \"./EventShareVideo\";\nimport EventTabs from \"./EventTabs\";\nimport { Segment, Visibility } from \"semantic-ui-react\";\nimport {\n  Player,\n  BigPlayButton,\n  ControlBar,\n  PlaybackRateMenuButton,\n  VolumeMenuButton\n} from \"video-react\";\nimport useMatchMedia from \"../hooks/useMatchMedia\";\nimport styled from \"@emotion/styled\";\nimport getDateTime from \"../utils/getDateTime\";\nimport \"video-react/dist/video-react.css\";\n\nconst StyledEvent = styled.div({\n  display: \"flex\",\n  flexWrap: \"wrap\",\n  justifyContent: \"space-between\"\n});\n\nconst Header = styled.div({\n  width: \"100%\",\n  margin: \"1em 0\"\n});\n\nconst EventDate = styled.span({\n  margin: \"0.1em 0\",\n  color: \"grey\",\n  fontWeight: \"400\"\n});\n\nconst InfoSegment = styled(Segment.Inline)({\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  width: \"100%\",\n  \"@media (min-aspect-ratio:5/4), (min-width:1200px)\": {\n    width: \"59%\"\n  }\n});\n\nconst FixedSentinel = styled.div({\n  position: \"absolute\",\n  left: \"0\",\n  right: \"0\",\n  visibility: \"hidden\",\n  height: \"90px\",\n  backgroundColor: \"yellow\"\n});\n\nconst DummyContainer = styled.div(props => ({\n  position: \"relative\",\n  display: \"none\",\n  \"@media (min-aspect-ratio:5/4), (min-width:1200px)\": {\n    display: props.isFixed ? \"block\" : \"none\",\n    width: \"59%\"\n  }\n}));\n\nconst DummyDiv = styled.div({\n  position: \"absolute\",\n  top: \"0\",\n  left: \"0\",\n  backgroundColor: \"black\",\n  height: \"100%\",\n  width: \"100%\"\n});\n\nconst PlayerContainer = styled.div(props => ({\n  width: \"100%\",\n  position: \"sticky\",\n  top: \"0\",\n  zIndex: \"2\",\n  \"@media (min-aspect-ratio:5/4), (min-width:1200px)\": {\n    position: props.isFixed ? \"fixed\" : \"relative\",\n    width: props.isFixed ? \"20vw\" : \"59%\",\n    right: \"0\"\n  }\n}));\n\nconst PlayerWrapper = styled.div({\n  position: \"relative\",\n  paddingTop: \"56.25%\"\n});\n\nconst Event = ({\n  id,\n  title,\n  date,\n  minutes,\n  scPageUrl,\n  videoUrl,\n  transcript,\n  votes,\n  query,\n  videoTimePoint\n}) => {\n  const videoPlayerRef = React.useRef(null);\n  //isFixed is a boolean, whether the video is fixed to the top-right\n  const [isFixed, setIsFixed] = React.useState(false);\n  //mediaQueriesMatches is a boolean, whether the video can be fixed to the top-right\n  const mediaQueriesMatches = useMatchMedia(\"(min-aspect-ratio:5/4), (min-width:1200px)\");\n  //videoOffSetHeight is used to determine vertical position of event tabs menu when it is sticky\n  const [videoOffSetHeight, setVideoOffsetHeight] = React.useState(0);\n\n  React.useEffect(() => {\n    //html5 video element\n    const video = videoPlayerRef.current.video.video;\n    //disable pip button for chrome, can't disable for firefox.\n    video.disablePictureInPicture = true;\n    setVideoOffsetHeight(video.offsetHeight);\n  }, []);\n\n  React.useEffect(() => {\n    const onResize = () => {\n      const video = videoPlayerRef.current.video.video;\n      setVideoOffsetHeight(video.offsetHeight);\n    };\n    window.addEventListener(\"resize\", onResize);\n    return () => {\n      window.removeEventListener(\"resize\", onResize);\n    };\n  }, []);\n\n  const handleSeek = seconds => {\n    videoPlayerRef.current.seek(parseFloat(seconds));\n    const { player } = videoPlayerRef.current.getState();\n    // if video is paused or has not started, then play video\n    if (player.paused || !player.hasStarted) {\n      videoPlayerRef.current.play();\n    }\n  };\n\n  const onBottomPassed = () => {\n    //bottom of FixedSentinel is not visible within viewport.\n    //and video can be fixed to top-right\n    if (mediaQueriesMatches) {\n      setIsFixed(true); //video is fixed to top-right\n    }\n  };\n\n  const onBottomPassedReverse = () => {\n    //bottom of FixedSentinel is visible within viewport\n    //and video can be fixed to top-right\n    if (mediaQueriesMatches) {\n      setIsFixed(false); //video is not fixed to top-right\n    }\n  };\n\n  return (\n    <StyledEvent>\n      <Header>\n        <h1>{title}</h1>\n      </Header>\n      <InfoSegment>\n        <EventDate>{getDateTime(date)}</EventDate>\n        <Segment.Inline>\n          <EventShareVideo videoPlayerRef={videoPlayerRef} />\n        </Segment.Inline>\n      </InfoSegment>\n      <Visibility\n        once={false}\n        onBottomPassed={onBottomPassed}\n        onBottomPassedReverse={onBottomPassedReverse}\n      >\n        <FixedSentinel />\n      </Visibility>\n      <DummyContainer isFixed={isFixed}>\n        <PlayerWrapper>\n          <DummyDiv />\n        </PlayerWrapper>\n      </DummyContainer>\n      <PlayerContainer isFixed={isFixed}>\n        <Player\n          fluid\n          aspectRatio='16:9'\n          preload={videoTimePoint ? 'auto' : 'metadata'}\n          ref={videoPlayerRef}\n          src={videoUrl}\n          startTime={videoTimePoint}>\n          <BigPlayButton position='center' />\n          <ControlBar autoHide={true}>\n            <VolumeMenuButton vertical />\n            <PlaybackRateMenuButton rates={[2, 1.5, 1, 0.75]} order={6.1} />\n          </ControlBar>\n        </Player>\n      </PlayerContainer>\n      <EventSearch\n        transcript={transcript}\n        handleSeek={handleSeek}\n        mediaQueriesMatches={mediaQueriesMatches}\n        query={query}\n      />\n      <EventTabs\n        minutes={minutes}\n        scPageUrl={scPageUrl}\n        transcript={transcript}\n        votes={votes}\n        handleSeek={handleSeek}\n        topOffset={mediaQueriesMatches ? 0 : videoOffSetHeight} //vertical position of event tabs menu when it is sticky\n        mediaQueriesMatches={mediaQueriesMatches}\n      />\n    </StyledEvent>\n  );\n};\n\nexport default Event;\n","import React from \"react\";\nimport { getEventById } from \"../api\";\nimport { Loader } from \"semantic-ui-react\";\nimport Event from \"../components/Event\";\nimport useDocumentTitle from \"../hooks/useDocumentTitle\";\nimport getDateTime from \"../utils/getDateTime\";\n\nconst EventContainer = ({ id, query, videoTimePoint }) => {\n  const [event, setEvent] = React.useState();\n  useDocumentTitle(event ? `${event.name} - ${getDateTime(event.date)}` : 'Loading...');\n\n  React.useEffect(() => {\n    try {\n      (async () => {\n        const eventData = await getEventById(id);\n        setEvent(eventData);\n      })();\n    } catch (e) {\n      // log error and display message\n    }\n  }, [id]);\n\n  return event ? (\n    <Event\n      id={id}\n      title={event.name}\n      date={event.date}\n      description={event.description}\n      scPageUrl={event.scPageUrl}\n      videoUrl={event.videoUrl}\n      minutes={event.minutes}\n      transcript={event.transcript}\n      votes={event.votes}\n      query={query}\n      videoTimePoint={videoTimePoint}\n    />\n  ) : <Loader active/>;\n};\n\nexport default EventContainer;\n","import React from \"react\";\nimport Event from \"../containers/Event\";\nimport { Container } from \"semantic-ui-react\";\nimport styled from \"@emotion/styled\";\nimport queryString from \"query-string\";\n\nconst Layout = styled(Container)({\n  minHeight: \"100vh\"\n});\n\nconst ContentContainer = styled(Container)({\n  marginTop: \"2em !important\",\n  marginBottom: \"5em !important\"\n});\n\nconst EventPage = ({ match, location }) => {\n  // The query parameters in the URL\n  const { q, t } = queryString.parse(location.search);\n\n  const parseQuery = () => {\n    // Get the search transcript query\n    let query = q ? q.trim().replace(/\\+/g, ' ') : '';\n    if (location.state) {\n      query = location.state.query || query;\n    }\n    return query;\n  }\n\n  const parseVideoTimePoint = () => {\n    // Get the video's starting time point\n    let videoTimePoint;\n    if (!t || isNaN(t)) {\n      videoTimePoint = 0;\n    } else {\n      videoTimePoint = Math.max(0, parseFloat(t));\n    }\n    return videoTimePoint;\n  }\n\n  return (\n    <Layout>\n      <ContentContainer>\n        <Event\n          id={match.params.id}\n          query={parseQuery()}\n          videoTimePoint={parseVideoTimePoint()} />\n      </ContentContainer>\n    </Layout>\n  );\n};\n\nexport default EventPage;\n","import React from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport styled from \"@emotion/styled\";\nimport AllEvents from \"../containers/AllEvents\";\n\nconst Layout = styled(Container)({\n  minHeight: \"100vh\"\n});\n\nconst ContentContainer = styled(Container)({\n  marginTop: \"2em !important\",\n  marginBottom: \"5em !important\"\n});\n\nconst AllEventsPage = () => {\n  return (\n    <Layout>\n      <ContentContainer>\n        <h2>All Events</h2>\n        <AllEvents />\n      </ContentContainer>\n    </Layout>\n  );\n};\n\nexport default AllEventsPage;\n","import React, { Fragment } from 'react'\nimport { withRouter } from \"react-router-dom\"\nimport styled from \"@emotion/styled\";\n\nconst FlexWrapContainer = styled('div')({\n    display: 'flex',\n    flexWrap: 'wrap',\n})\n\nconst Card = styled('div')({\n    width: '250px',\n    border: '1px solid #d4d4d5',\n    boxShadow: '0 1px 3px 0 #d4d4d5',\n    padding: '1.5rem',\n    marginBottom: '1.5rem',\n    borderRadius: '3px',\n    marginRight: '2rem',\n    cursor: 'pointer',\n    transition: '.4s all',\n    \":hover\": {\n        transform: 'scale(1.15)',\n    }\n})\n\nconst CardHeading = styled('h5')({\n    fontWeight: 600,\n    fontSize: '1.2rem'\n})\n\n\nconst PeopleCardGroup = ({ people, history }) => {\n    return (\n        <Fragment>\n            <h2>Voting History</h2>\n            <FlexWrapContainer>\n                {people.map(({ full_name, email, id }) => (\n                    <Card\n                        key={full_name}\n                        onClick={() => history.push(`/people/${id}`)}>\n                        <CardHeading>{full_name}</CardHeading>\n                        <p>City Council Member</p>\n                        <a href={`mailto:${email}`}>{email}</a>\n                    </Card>\n                    )\n                )}\n            </FlexWrapContainer>\n        </Fragment>\n    )\n}\n\nexport default withRouter(PeopleCardGroup)\n","import React, { useEffect, useState } from 'react'\nimport { getAllPeople } from '../api'\nimport PeopleCardGroup from '../components/PeopleCardGroup'\nimport { Loader } from \"semantic-ui-react\";\nimport useDocumentTitle from \"../hooks/useDocumentTitle\";\n\nconst PeopleCardGroupContainer = () => {\n    const [people, updatePeople] = useState(null);\n    useDocumentTitle('City Council Members');\n\n    useEffect(() => {\n        async function fetchData() {\n            const data = await getAllPeople()\n            updatePeople(data)\n        }\n        fetchData()\n    },[])\n\n    if(!people) {\n        return <Loader active/>\n    }\n    return (\n        <PeopleCardGroup people={people} />\n    )\n}\n\nexport default PeopleCardGroupContainer;","import React from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport styled from \"@emotion/styled\";\nimport PeopleCardGroupContainer from '../containers/PeopleCardGroupContainer';\n\n// TODO: duplicate from Home, move to utils\nconst Layout = styled(Container)({\n    minHeight: \"100vh\"\n  });\n\n// TODO: duplicate from Home, move to utils\nconst ContentContainer = styled(Container)({\n    marginTop: \"2em !important\",\n    marginBottom: \"5em !important\"\n  });\n\nconst People = () => {\n    return (\n        <Layout>\n            <ContentContainer>\n                <PeopleCardGroupContainer />\n            </ContentContainer>\n        </Layout>\n    );\n}\n\nexport default People;\n","import React, { useState }                       from 'react';\nimport { Checkbox, Form, Header, Grid, Segment } from 'semantic-ui-react';\nimport _                                         from 'lodash';\nimport VotingTable                               from './VotingTable';\n\nconst cssCheckbox = { marginRight: '0.5em' }\n\nconst Person = ({personHistory: {full_name, email, phone, website, votes}}) => {\n  // == Get unique vote cast types from votes list.\n  const votingOptions = _.compact(_.uniq(votes.map(vote => vote.voteForPerson)))\n  // == Selected votes for checkboxes.\n  const [selectedVoteFilters, setSelectedVoteFilters] = useState([])\n  // == Votes filtered to be displayed in table.\n  const [filteredVotes, setFilteredVotes] = useState(votes)\n\n  const onSelectedVoteFilterChange = (event, { label }) => {\n    // == Set filters\n    let selectedFilters = []\n    if (selectedVoteFilters.includes(label)) {\n      // == Filter was unchecked\n      selectedFilters = _.without(selectedVoteFilters, label)\n      setSelectedVoteFilters(selectedFilters)\n    } else {\n      // == Filter was checked.\n      selectedVoteFilters.push(label)\n      selectedFilters = selectedVoteFilters\n      setSelectedVoteFilters(selectedFilters)\n    }\n\n    // == Set table results\n    if (_.isEmpty(selectedFilters)) {\n      // == If no filters set, display all votes\n      setFilteredVotes(votes)\n    } else {\n      // == Otherwise filter them by the selected filters.\n      setFilteredVotes(_.filter(votes, vote => selectedFilters.includes(vote.voteForPerson)))\n    }\n  }\n\n  // == Make a checkbox for each vote cast type in the voting table.\n  const filterVotingOptions = votingOptions.map((votingOption, index) => <Checkbox style={cssCheckbox} key={index} label={votingOption} onChange={onSelectedVoteFilterChange} />)\n\n  return <React.Fragment>\n    <Header as=\"h1\">{full_name}</Header>\n    <Grid columns={1} stackable>\n      <Grid.Column>\n        <Segment>\n          <Header as=\"h2\">Contact information</Header>\n          <strong>Email:</strong> <a href={`mailto:${email}`}>{email}</a>\n          <div><strong>Phone:</strong> {phone}</div>\n          <div><strong>Website:</strong> <a target={'_blank'} rel=\"noopener noreferrer\" href={website}>{website}</a></div>\n        </Segment>\n      </Grid.Column>\n      <Grid.Column>\n        <Segment>\n          <Header as=\"h2\">Voting record</Header>\n          <Header as=\"h3\">Filter by vote cast</Header>\n          <Form>{ filterVotingOptions }</Form>\n          <VotingTable votingData={filteredVotes} isPerson={true} />\n         </Segment>\n      </Grid.Column>\n    </Grid>\n  </React.Fragment>\n}\n\nexport default Person;","import React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { getVotesForPerson } from '../api';\nimport Person from '../components/Person';\nimport { Loader } from \"semantic-ui-react\";\nimport useDocumentTitle from \"../hooks/useDocumentTitle\";\n\nconst PersonContainer = ({ match: { params: { id }} }) => {\n    const [personHistory, updatePersonHistory] = useState(null);\n    useDocumentTitle(personHistory ? personHistory.full_name : 'Loading...');\n    useEffect(() => {\n        async function fetchData() {\n            const votes = await getVotesForPerson(id);\n            updatePersonHistory(votes);\n        }\n        fetchData()\n    }, [id])\n    if(!personHistory) {\n        return <Loader active/>\n    }\n    return (\n        <Person personHistory={personHistory}/>\n    )\n}\n\nexport default withRouter(PersonContainer);","import React from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport PersonContainer from \"../containers/PersonContainer\";\nimport styled from \"@emotion/styled\";\n\n// TODO: duplicate from Home, move to utils\nconst Layout = styled(Container)({\n    minHeight: \"100vh\"\n  });\n\n// TODO: duplicate from Home, move to utils\nconst ContentContainer = styled(Container)({\n    marginTop: \"2em !important\",\n    marginBottom: \"5em !important\"\n  });\n\nconst Person = () => {\n    return (\n        <Layout>\n            <ContentContainer>\n                <PersonContainer />\n            </ContentContainer>\n        </Layout>\n    );\n}\n\nexport default Person;\n","import React from \"react\";\nimport ReactGA from \"react-ga\";\nimport withTracker from \"./utils/withTracker\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Home from \"./pages/Home\";\nimport Search from \"./pages/Search\";\nimport Event from \"./pages/Event\";\nimport AllEvents from \"./pages/AllEvents\";\nimport People from \"./pages/People\";\nimport Person from \"./pages/Person\";\n\n// Run Google Analytics\nReactGA.initialize(\"UA-145893191-1\");\n\nconst App = () => (\n  <Router basename=\"/\">\n    <Header />\n    <Switch>\n      <Route exact path=\"/\" component={withTracker(Home)} />\n      <Route path=\"/search\" component={withTracker(Search)} />\n      <Route exact path=\"/events\" component={withTracker(AllEvents)} />\n      <Route path=\"/events/:id\" component={withTracker(Event)} />\n      <Route exact path=\"/people\" component={withTracker(People)} />\n      <Route exact path=\"/people/:id\" component={withTracker(Person)} />\n    </Switch>\n    <Footer />\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}